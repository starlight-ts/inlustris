[
  {
    "id": "InlustrisClient()",
    "longname": "InlustrisClient",
    "name": "InlustrisClient",
    "kind": "constructor",
    "description": "<p>Creates a new client.</p>",
    "memberof": "InlustrisClient",
    "params": [
      {
        "type": {
          "names": [
            "InlustrisOptions"
          ]
        },
        "optional": true,
        "defaultvalue": "{}",
        "description": "<p>Options to use when loading the client.</p>",
        "name": "options"
      }
    ],
    "order": 1
  },
  {
    "id": "BaseRegistry()",
    "longname": "BaseRegistry",
    "name": "BaseRegistry",
    "kind": "constructor",
    "description": "<p>Creates a new BaseRegistry.</p>",
    "memberof": "BaseRegistry",
    "params": [
      {
        "type": {
          "names": [
            "InlustrisClient"
          ]
        },
        "description": "<p>The client</p>",
        "name": "client"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>The name of the registry</p>",
        "name": "name"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "<p>The class that the registry will use to create instances</p>",
        "name": "holds"
      }
    ],
    "order": 44
  },
  {
    "id": "Base()",
    "longname": "Base",
    "name": "Base",
    "kind": "constructor",
    "description": "<p>Initializes a new Base.</p>",
    "memberof": "Base",
    "params": [
      {
        "type": {
          "names": [
            "InlustrisClient"
          ]
        },
        "description": "<p>The Client for the Base</p>",
        "name": "client"
      },
      {
        "type": {
          "names": [
            "BaseOptions"
          ]
        },
        "optional": true,
        "defaultvalue": "{id:''}",
        "description": "<p>The base options</p>",
        "name": "options"
      }
    ],
    "order": 102
  },
  {
    "id": "Cron()",
    "longname": "Cron",
    "name": "Cron",
    "kind": "constructor",
    "memberof": "Cron",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "name": "cron"
      }
    ],
    "order": 166
  },
  {
    "id": "Type()",
    "longname": "Type",
    "name": "Type",
    "kind": "constructor",
    "memberof": "Type",
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "<p>The value to generate a deep Type for</p>",
        "name": "value"
      },
      {
        "type": {
          "names": [
            "Type"
          ]
        },
        "optional": true,
        "defaultvalue": null,
        "description": "<p>The parent value used in recursion</p>",
        "name": "parent"
      }
    ],
    "order": 197
  },
  {
    "id": "Util()",
    "longname": "Util",
    "name": "Util",
    "kind": "constructor",
    "description": "<p>This class may not be initialized with new</p>",
    "memberof": "Util",
    "exceptions": [
      {
        "type": {
          "names": [
            "Error"
          ]
        }
      }
    ],
    "order": 213
  },
  {
    "id": "InlustrisClient",
    "longname": "InlustrisClient",
    "name": "InlustrisClient",
    "kind": "class",
    "scope": "global",
    "augments": [
      "external:Client"
    ],
    "description": "<p>The base client for Inlustris.</p>",
    "meta": {
      "lineno": 47,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 0
  },
  {
    "id": "BaseRegistry",
    "longname": "BaseRegistry",
    "name": "BaseRegistry",
    "kind": "class",
    "scope": "global",
    "meta": {
      "lineno": 24,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 43
  },
  {
    "id": "CommandRegistry",
    "longname": "CommandRegistry",
    "name": "CommandRegistry",
    "kind": "class",
    "scope": "global",
    "augments": [
      "BaseRegistry"
    ],
    "description": "<p>The registry for holding and loading commands.</p>",
    "meta": {
      "lineno": 21,
      "filename": "CommandRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 56
  },
  {
    "id": "EventRegistry",
    "longname": "EventRegistry",
    "name": "EventRegistry",
    "kind": "class",
    "scope": "global",
    "augments": [
      "BaseRegistry"
    ],
    "description": "<p>The event registry for loading events</p>",
    "meta": {
      "lineno": 21,
      "filename": "EventRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 62
  },
  {
    "id": "TaskRegistry",
    "longname": "TaskRegistry",
    "name": "TaskRegistry",
    "kind": "class",
    "scope": "global",
    "augments": [
      "BaseRegistry"
    ],
    "description": "<p>The registry where tasks are loaded and stored.</p>",
    "meta": {
      "lineno": 17,
      "filename": "TaskRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 67
  },
  {
    "id": "Schedule",
    "longname": "Schedule",
    "name": "Schedule",
    "kind": "class",
    "scope": "global",
    "description": "<p>The schedule for the schedule plugin.</p>",
    "meta": {
      "lineno": 18,
      "filename": "Schedule.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "order": 68
  },
  {
    "id": "ScheduledTask",
    "longname": "ScheduledTask",
    "name": "ScheduledTask",
    "kind": "class",
    "scope": "global",
    "description": "<p>A scheduled task, used for creating tasks.</p>",
    "meta": {
      "lineno": 28,
      "filename": "ScheduledTask.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "order": 85
  },
  {
    "id": "Base",
    "longname": "Base",
    "name": "Base",
    "kind": "class",
    "scope": "global",
    "meta": {
      "lineno": 16,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "virtual": true,
    "description": "<p>The base class for all pieces.</p>",
    "order": 101
  },
  {
    "id": "Command",
    "longname": "Command",
    "name": "Command",
    "kind": "class",
    "scope": "global",
    "augments": [
      "Base"
    ],
    "description": "<p>Command class for creating commands.</p>",
    "meta": {
      "lineno": 17,
      "filename": "Command.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 112
  },
  {
    "id": "Event",
    "longname": "Event",
    "name": "Event",
    "kind": "class",
    "scope": "global",
    "augments": [
      "Base"
    ],
    "description": "<p>The event class for creating events.</p>",
    "meta": {
      "lineno": 17,
      "filename": "Event.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 116
  },
  {
    "id": "Task",
    "longname": "Task",
    "name": "Task",
    "kind": "class",
    "scope": "global",
    "augments": [
      "Base"
    ],
    "description": "<p>The task class, used for creating tasks.</p>",
    "meta": {
      "lineno": 3,
      "filename": "Task.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "virtual": true,
    "order": 125
  },
  {
    "id": "ClientUtil",
    "longname": "ClientUtil",
    "name": "ClientUtil",
    "kind": "class",
    "scope": "global",
    "description": "<p>Utility methods to use for common tasks.</p>",
    "meta": {
      "lineno": 20,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 126
  },
  {
    "id": "Cron",
    "longname": "Cron",
    "name": "Cron",
    "kind": "class",
    "scope": "global",
    "description": "<p>Cron utility class, used for creating tasks.</p>",
    "meta": {
      "lineno": 29,
      "filename": "Cron.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 165
  },
  {
    "id": "InlustrisError",
    "longname": "InlustrisError",
    "name": "InlustrisError",
    "kind": "class",
    "scope": "global",
    "augments": [
      "Error"
    ],
    "description": "<p>An error class used to make error throwing universal.</p>",
    "meta": {
      "lineno": 23,
      "filename": "InlustrisError.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 174
  },
  {
    "id": "List",
    "longname": "List",
    "name": "List",
    "kind": "class",
    "scope": "global",
    "augments": [
      "Set"
    ],
    "description": "<p>A Set with additional utility methods.</p>",
    "meta": {
      "lineno": 15,
      "filename": "List.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 175
  },
  {
    "id": "Type",
    "longname": "Type",
    "name": "Type",
    "kind": "class",
    "scope": "global",
    "description": "<p>The class for deep checking types.</p>",
    "meta": {
      "lineno": 20,
      "filename": "Type.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 196
  },
  {
    "id": "Util",
    "longname": "Util",
    "name": "Util",
    "kind": "class",
    "scope": "global",
    "description": "<p>Internal utility class.</p>",
    "meta": {
      "lineno": 29,
      "filename": "Util.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 212
  },
  {
    "id": "_Symbol$species",
    "longname": "_Symbol$species",
    "name": "_Symbol$species",
    "kind": "member",
    "scope": "global",
    "augments": [
      "Collection"
    ],
    "description": "<p>The base registry for all stores to extend.</p>",
    "params": [],
    "meta": {
      "lineno": 10,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "virtual": true,
    "order": 42
  },
  {
    "id": "InlustrisPlugin",
    "longname": "InlustrisPlugin",
    "name": "InlustrisPlugin",
    "kind": "typedef",
    "scope": "global",
    "description": "<p>The required export to load an external plugin</p>",
    "type": {
      "names": [
        "Object"
      ]
    },
    "properties": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>The name of the plugin, this will be what's attached to the client</p>",
        "name": "name"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "<p>The loader function, will be called with the {@link InlustrisClient client} as <code>this</code></p>",
        "name": "loader"
      }
    ],
    "meta": {
      "lineno": 381,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 35
  },
  {
    "id": "InlustrisOptions",
    "longname": "InlustrisOptions",
    "name": "InlustrisOptions",
    "kind": "typedef",
    "scope": "global",
    "description": "<p>Options for a new {@link InlustrisClient}</p>",
    "type": {
      "names": [
        "external:ClientOptions"
      ]
    },
    "properties": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "<p>The prefix to use for commands, can be omitted if the command plugin is disabled</p>",
        "name": "prefix"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>The token to use to log the client in</p>",
        "name": "token"
      },
      {
        "type": {
          "names": [
            "Iterable.<string>"
          ]
        },
        "optional": true,
        "description": "<p>Plugins to load on start, this is the alternate to {@link InlustrisClient#use}</p>",
        "name": "plugins"
      }
    ],
    "meta": {
      "lineno": 388,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 36
  },
  {
    "id": "InternalPlugins",
    "longname": "InternalPlugins",
    "name": "InternalPlugins",
    "kind": "typedef",
    "scope": "global",
    "description": "<p>A list of internal plugins. Calling <code>internals</code> or <code>defaults</code> as a loaded plugin\nwill load all of them.</p>\n<ul>\n<li><code>util</code> adds client utility methods.</li>\n<li><code>settings</code> adds settings to the client (WIP).</li>\n</ul>",
    "type": {
      "names": [
        "string"
      ]
    },
    "meta": {
      "lineno": 421,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 41
  },
  {
    "id": "TimeResolvable",
    "longname": "TimeResolvable",
    "name": "TimeResolvable",
    "kind": "typedef",
    "scope": "global",
    "description": "<p>Something that is able to be resolved to a time, used for tasks</p>",
    "type": {
      "names": [
        "Date",
        "number",
        "Cron",
        "string"
      ]
    },
    "meta": {
      "lineno": 10,
      "filename": "ScheduledTask.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "order": 84
  },
  {
    "id": "BaseOptions",
    "longname": "BaseOptions",
    "name": "BaseOptions",
    "kind": "typedef",
    "scope": "global",
    "description": "<p>The base options for a module</p>",
    "type": {
      "names": [
        "Object"
      ]
    },
    "properties": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>The ID of the module</p>",
        "name": "id"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "<p>Whether the module should be enabled on startup</p>",
        "name": "enabled"
      }
    ],
    "meta": {
      "lineno": 102,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 111
  },
  {
    "id": "external:UserResolvable",
    "longname": "external:UserResolvable",
    "name": "UserResolvable",
    "kind": "external",
    "scope": "global",
    "see": [
      "{@link https://discord.js.org/#/docs/main/master/typedef/UserResolvable}"
    ],
    "meta": {
      "lineno": 361,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 31
  },
  {
    "id": "external:Client",
    "longname": "external:Client",
    "name": "Client",
    "kind": "external",
    "scope": "global",
    "see": [
      "{@link https://discord.js.org/#/docs/main/master/class/Client}"
    ],
    "meta": {
      "lineno": 366,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 32
  },
  {
    "id": "external:ClientOptions",
    "longname": "external:ClientOptions",
    "name": "ClientOptions",
    "kind": "external",
    "scope": "global",
    "see": [
      "{@link https://discord.js.org/#/docs/main/master/typedef/ClientOptions}"
    ],
    "meta": {
      "lineno": 371,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 33
  },
  {
    "id": "external:ClientApplication",
    "longname": "external:ClientApplication",
    "name": "ClientApplication",
    "kind": "external",
    "scope": "global",
    "see": [
      "{@link https://discord.js.org/#/docs/main/master/class/ClientApplication}"
    ],
    "meta": {
      "lineno": 376,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 34
  },
  {
    "id": "external:Message",
    "longname": "external:Message",
    "name": "Message",
    "kind": "external",
    "scope": "global",
    "see": [
      "{@link https://discord.js.org/#/docs/main/master/class/Message}"
    ],
    "meta": {
      "lineno": 51,
      "filename": "Command.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 115
  },
  {
    "id": "external:Collection",
    "longname": "external:Collection",
    "name": "Collection",
    "kind": "external",
    "scope": "global",
    "see": [
      "{@link https://discord.js.org/#/docs/main/master/class/Collection}"
    ],
    "meta": {
      "lineno": 400,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 153
  },
  {
    "id": "external:MessageAttachment",
    "longname": "external:MessageAttachment",
    "name": "MessageAttachment",
    "kind": "external",
    "scope": "global",
    "see": [
      "{@link https://discord.js.org/#/docs/main/master/class/MessageAttachment}"
    ],
    "meta": {
      "lineno": 405,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 154
  },
  {
    "id": "external:BufferResolvable",
    "longname": "external:BufferResolvable",
    "name": "BufferResolvable",
    "kind": "external",
    "scope": "global",
    "see": [
      "{@link https://discord.js.org/#/docs/main/master/typedef/BufferResolvable}"
    ],
    "meta": {
      "lineno": 410,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 155
  },
  {
    "id": "external:MessageEmbed",
    "longname": "external:MessageEmbed",
    "name": "MessageEmbed",
    "kind": "external",
    "scope": "global",
    "see": [
      "{@link https://discord.js.org/#/docs/main/master/class/MessageEmbed}"
    ],
    "meta": {
      "lineno": 415,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 156
  },
  {
    "id": "external:MessageEmbedOptions",
    "longname": "external:MessageEmbedOptions",
    "name": "MessageEmbedOptions",
    "kind": "external",
    "scope": "global",
    "see": [
      "{@link https://discord.js.org/#/docs/main/master/typedef/MessageEmbedOptions}"
    ],
    "meta": {
      "lineno": 420,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 157
  },
  {
    "id": "external:GuildMember",
    "longname": "external:GuildMember",
    "name": "GuildMember",
    "kind": "external",
    "scope": "global",
    "see": [
      "{@link https://discord.js.org/#/docs/main/master/class/GuildMember}"
    ],
    "meta": {
      "lineno": 425,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 158
  },
  {
    "id": "external:Guild",
    "longname": "external:Guild",
    "name": "Guild",
    "kind": "external",
    "scope": "global",
    "see": [
      "{@link https://discord.js.org/#/docs/main/master/class/Guild}"
    ],
    "meta": {
      "lineno": 430,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 159
  },
  {
    "id": "external:Snowflake",
    "longname": "external:Snowflake",
    "name": "Snowflake",
    "kind": "external",
    "scope": "global",
    "see": [
      "{@link https://discord.js.org/#/docs/main/master/typedef/Snowflake}"
    ],
    "meta": {
      "lineno": 435,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 160
  },
  {
    "id": "external:Emoji",
    "longname": "external:Emoji",
    "name": "Emoji",
    "kind": "external",
    "scope": "global",
    "see": [
      "{@link https://discord.js.org/#/docs/main/master/class/Emoji}"
    ],
    "meta": {
      "lineno": 440,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 161
  },
  {
    "id": "external:Role",
    "longname": "external:Role",
    "name": "Role",
    "kind": "external",
    "scope": "global",
    "see": [
      "{@link https://discord.js.org/#/docs/main/master/class/Role}"
    ],
    "meta": {
      "lineno": 445,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 162
  },
  {
    "id": "external:GuildChannel",
    "longname": "external:GuildChannel",
    "name": "GuildChannel",
    "kind": "external",
    "scope": "global",
    "see": [
      "{@link https://discord.js.org/#/docs/main/master/class/GuildChannel}"
    ],
    "meta": {
      "lineno": 450,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 163
  },
  {
    "id": "external:User",
    "longname": "external:User",
    "name": "User",
    "kind": "external",
    "scope": "global",
    "see": [
      "{@link https://discord.js.org/#/docs/main/master/class/User}"
    ],
    "meta": {
      "lineno": 455,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 164
  },
  {
    "id": "InlustrisClient#_plugins",
    "longname": "InlustrisClient#_plugins",
    "name": "_plugins",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The plugins to load, kept as a list internally</p>",
    "memberof": "InlustrisClient",
    "type": {
      "names": [
        "List.<string>"
      ]
    },
    "access": "private",
    "meta": {
      "lineno": 61,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 2
  },
  {
    "id": "InlustrisClient#util",
    "longname": "InlustrisClient#util",
    "name": "util",
    "kind": "member",
    "scope": "instance",
    "description": "<p>A {@link ClientUtil} to use, will only be loaded if <code>internals</code>, <code>defaults</code>, or <code>util</code> is specified in {@link InlustrisOptions#plugins} or used with {@link InlustrisClient#use}</p>",
    "memberof": "InlustrisClient",
    "type": {
      "names": [
        "ClientUtil"
      ]
    },
    "nullable": true,
    "meta": {
      "lineno": 68,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 3
  },
  {
    "id": "InlustrisClient#_token",
    "longname": "InlustrisClient#_token",
    "name": "_token",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The token to use to log in, used in the {@link InlustrisClient#start start} method</p>",
    "memberof": "InlustrisClient",
    "type": {
      "names": [
        "string"
      ]
    },
    "access": "private",
    "meta": {
      "lineno": 74,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 4
  },
  {
    "id": "InlustrisClient#application",
    "longname": "InlustrisClient#application",
    "name": "application",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The application of the client</p>",
    "memberof": "InlustrisClient",
    "type": {
      "names": [
        "external:ClientApplication"
      ]
    },
    "nullable": true,
    "meta": {
      "lineno": 81,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 5
  },
  {
    "id": "InlustrisClient#registries",
    "longname": "InlustrisClient#registries",
    "name": "registries",
    "kind": "member",
    "scope": "instance",
    "description": "<p>Every registry attached to the client, externals will automatically be attached</p>",
    "memberof": "InlustrisClient",
    "type": {
      "names": [
        "List.<BaseRegistry>"
      ]
    },
    "access": "private",
    "meta": {
      "lineno": 87,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 6
  },
  {
    "id": "InlustrisClient#events",
    "longname": "InlustrisClient#events",
    "name": "events",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The event registry for all the events</p>",
    "memberof": "InlustrisClient",
    "type": {
      "names": [
        "EventRegistry"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 94,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 7
  },
  {
    "id": "InlustrisClient#loaded",
    "longname": "InlustrisClient#loaded",
    "name": "loaded",
    "kind": "member",
    "scope": "instance",
    "description": "<p>Whether the client has loaded all available plugins</p>",
    "memberof": "InlustrisClient",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "meta": {
      "lineno": 102,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 8
  },
  {
    "id": "InlustrisClient#tasks",
    "longname": "InlustrisClient#tasks",
    "name": "tasks",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The registry where tasks are stored, only applied if <code>schedule</code>, <code>tasks</code>, <code>internals</code>, or <code>defaults</code> is a loaded plugin</p>",
    "memberof": "InlustrisClient",
    "type": {
      "names": [
        "TaskRegistry"
      ]
    },
    "nullable": true,
    "meta": {
      "lineno": 108,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 9
  },
  {
    "id": "InlustrisClient#schedule",
    "longname": "InlustrisClient#schedule",
    "name": "schedule",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The schedule for the tasks, only applied if <code>schedule</code>, <code>tasks</code>, <code>internals</code>, or <code>defaults</code> is a loaded plugin</p>",
    "memberof": "InlustrisClient",
    "type": {
      "names": [
        "Schedule"
      ]
    },
    "nullable": true,
    "meta": {
      "lineno": 114,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 10
  },
  {
    "id": "InlustrisClient#_ready",
    "longname": "InlustrisClient#_ready",
    "name": "_ready",
    "kind": "member",
    "scope": "instance",
    "description": "<p>Internal ready check</p>",
    "memberof": "InlustrisClient",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "access": "private",
    "meta": {
      "lineno": 120,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 11
  },
  {
    "id": "InlustrisClient#ready",
    "longname": "InlustrisClient#ready",
    "name": "ready",
    "kind": "member",
    "scope": "instance",
    "description": "<p>Whether the client is ready. Used internally for several things</p>",
    "memberof": "InlustrisClient",
    "params": [],
    "type": {
      "names": [
        "boolean"
      ]
    },
    "meta": {
      "lineno": 128,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 12
  },
  {
    "id": "InlustrisClient#owners",
    "longname": "InlustrisClient#owners",
    "name": "owners",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The owners of the client, will only have one until teams support is added</p>",
    "memberof": "InlustrisClient",
    "params": [],
    "type": {
      "names": [
        "List.<external:User>"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 140,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 13
  },
  {
    "id": "InlustrisClient#plugins",
    "longname": "InlustrisClient#plugins",
    "name": "plugins",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The plugins that will be loaded when the client starts</p>",
    "memberof": "InlustrisClient",
    "params": [],
    "type": {
      "names": [
        "List.<string>"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 154,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 14
  },
  {
    "id": "InlustrisClient#text",
    "longname": "InlustrisClient#text",
    "name": "text",
    "kind": "member",
    "scope": "instance",
    "description": "<p>All the text channels the client can see</p>",
    "memberof": "InlustrisClient",
    "params": [],
    "type": {
      "names": [
        "Collection.<string, TextChannel>"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 163,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 15
  },
  {
    "id": "InlustrisClient#voiceChannels",
    "longname": "InlustrisClient#voiceChannels",
    "name": "voiceChannels",
    "kind": "member",
    "scope": "instance",
    "description": "<p>All the voice channels the client can see (named this was as Client#voice is the <code>ClientVoiceManager</code>)</p>",
    "memberof": "InlustrisClient",
    "params": [],
    "type": {
      "names": [
        "Collection.<string, VoiceChannel>"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 172,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 16
  },
  {
    "id": "InlustrisClient#news",
    "longname": "InlustrisClient#news",
    "name": "news",
    "kind": "member",
    "scope": "instance",
    "description": "<p>All the news channels the client can see</p>",
    "memberof": "InlustrisClient",
    "params": [],
    "type": {
      "names": [
        "Collection.<string, NewsChannel>"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 181,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 17
  },
  {
    "id": "InlustrisClient#store",
    "longname": "InlustrisClient#store",
    "name": "store",
    "kind": "member",
    "scope": "instance",
    "description": "<p>All the store channels the client can see</p>",
    "memberof": "InlustrisClient",
    "params": [],
    "type": {
      "names": [
        "Collection.<string, StoreChannel>"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 190,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 18
  },
  {
    "id": "InlustrisClient#category",
    "longname": "InlustrisClient#category",
    "name": "category",
    "kind": "member",
    "scope": "instance",
    "description": "<p>All the category channels the client can see</p>",
    "memberof": "InlustrisClient",
    "params": [],
    "type": {
      "names": [
        "Collection.<string, CategoryChannel>"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 199,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 19
  },
  {
    "id": "InlustrisClient#dm",
    "longname": "InlustrisClient#dm",
    "name": "dm",
    "kind": "member",
    "scope": "instance",
    "description": "<p>All the DM channels the client can see</p>",
    "memberof": "InlustrisClient",
    "params": [],
    "type": {
      "names": [
        "Collection.<string, DMChannel>"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 208,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 20
  },
  {
    "id": "InlustrisClient#me",
    "longname": "InlustrisClient#me",
    "name": "me",
    "kind": "member",
    "scope": "instance",
    "description": "<p>A collection of all the <code>Guild#me</code> instances, mapped by Guild ID</p>",
    "memberof": "InlustrisClient",
    "params": [],
    "type": {
      "names": [
        "Collection.<string, ?GuildMember>"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 217,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 21
  },
  {
    "id": "BaseRegistry#holds",
    "longname": "BaseRegistry#holds",
    "name": "holds",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The client that this Registry is for</p>",
    "memberof": "BaseRegistry",
    "type": {
      "names": [
        "InlustrisClient"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 33,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 45
  },
  {
    "id": "BaseRegistry#name",
    "longname": "BaseRegistry#name",
    "name": "name",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The name of the Registry</p>",
    "memberof": "BaseRegistry",
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 41,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 46
  },
  {
    "id": "BaseRegistry#holds",
    "longname": "BaseRegistry#holds",
    "name": "holds",
    "kind": "member",
    "scope": "instance",
    "description": "<p>What this Registry holds</p>",
    "memberof": "BaseRegistry",
    "type": {
      "names": [
        "Base"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 49,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 47
  },
  {
    "id": "BaseRegistry#coreDirectories",
    "longname": "BaseRegistry#coreDirectories",
    "name": "coreDirectories",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The core directories where bases are located</p>",
    "memberof": "BaseRegistry",
    "type": {
      "names": [
        "List.<string>"
      ]
    },
    "readonly": true,
    "access": "private",
    "meta": {
      "lineno": 57,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 48
  },
  {
    "id": "BaseRegistry#userDirectory",
    "longname": "BaseRegistry#userDirectory",
    "name": "userDirectory",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The directory where the bases are found</p>",
    "memberof": "BaseRegistry",
    "params": [],
    "type": {
      "names": [
        "string"
      ]
    },
    "meta": {
      "lineno": 77,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 50
  },
  {
    "id": "Schedule#client",
    "longname": "Schedule#client",
    "name": "client",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The client</p>",
    "memberof": "Schedule",
    "type": {
      "names": [
        "InlustrisClient"
      ]
    },
    "meta": {
      "lineno": 16,
      "filename": "Schedule.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "order": 69
  },
  {
    "id": "Schedule#tasks",
    "longname": "Schedule#tasks",
    "name": "tasks",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The tasks that have been set</p>",
    "memberof": "Schedule",
    "type": {
      "names": [
        "Array.<ScheduledTask>"
      ]
    },
    "meta": {
      "lineno": 22,
      "filename": "Schedule.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "order": 70
  },
  {
    "id": "Schedule#_interval",
    "longname": "Schedule#_interval",
    "name": "_interval",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The timer to check for tasks</p>",
    "memberof": "Schedule",
    "type": {
      "names": [
        "NodeJS.Timer"
      ]
    },
    "nullable": true,
    "access": "private",
    "meta": {
      "lineno": 28,
      "filename": "Schedule.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "order": 71
  },
  {
    "id": "ScheduledTask#client",
    "longname": "ScheduledTask#client",
    "name": "client",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The client</p>",
    "memberof": "ScheduledTask",
    "type": {
      "names": [
        "InlustrisClient"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 37,
      "filename": "ScheduledTask.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "order": 86
  },
  {
    "id": "ScheduledTask#taskName",
    "longname": "ScheduledTask#taskName",
    "name": "taskName",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The name of the task</p>",
    "memberof": "ScheduledTask",
    "type": {
      "names": [
        "string"
      ]
    },
    "meta": {
      "lineno": 45,
      "filename": "ScheduledTask.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "order": 87
  },
  {
    "id": "ScheduledTask#recurring",
    "longname": "ScheduledTask#recurring",
    "name": "recurring",
    "kind": "member",
    "scope": "instance",
    "description": "<p>When the task should recur</p>",
    "memberof": "ScheduledTask",
    "type": {
      "names": [
        "Cron"
      ]
    },
    "nullable": true,
    "meta": {
      "lineno": 51,
      "filename": "ScheduledTask.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "order": 88
  },
  {
    "id": "ScheduledTask#time",
    "longname": "ScheduledTask#time",
    "name": "time",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The time that this task should run</p>",
    "memberof": "ScheduledTask",
    "type": {
      "names": [
        "Date"
      ]
    },
    "meta": {
      "lineno": 57,
      "filename": "ScheduledTask.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "order": 89
  },
  {
    "id": "ScheduledTask#id",
    "longname": "ScheduledTask#id",
    "name": "id",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The unique ID of the task</p>",
    "memberof": "ScheduledTask",
    "type": {
      "names": [
        "string"
      ]
    },
    "meta": {
      "lineno": 63,
      "filename": "ScheduledTask.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "order": 90
  },
  {
    "id": "ScheduledTask#data",
    "longname": "ScheduledTask#data",
    "name": "data",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The data to pass to the task when ran</p>",
    "memberof": "ScheduledTask",
    "type": {
      "names": [
        "any"
      ]
    },
    "meta": {
      "lineno": 69,
      "filename": "ScheduledTask.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "order": 91
  },
  {
    "id": "ScheduledTask#running",
    "longname": "ScheduledTask#running",
    "name": "running",
    "kind": "member",
    "scope": "instance",
    "description": "<p>Whether the task is running</p>",
    "memberof": "ScheduledTask",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "access": "private",
    "meta": {
      "lineno": 75,
      "filename": "ScheduledTask.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "order": 92
  },
  {
    "id": "ScheduledTask#task",
    "longname": "ScheduledTask#task",
    "name": "task",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The task that this is for</p>",
    "memberof": "ScheduledTask",
    "params": [],
    "type": {
      "names": [
        "Task"
      ]
    },
    "readonly": true,
    "nullable": true,
    "meta": {
      "lineno": 85,
      "filename": "ScheduledTask.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "order": 93
  },
  {
    "id": "ScheduledTask#registry",
    "longname": "ScheduledTask#registry",
    "name": "registry",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The schedule for the task</p>",
    "memberof": "ScheduledTask",
    "params": [],
    "type": {
      "names": [
        "Schedule"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 94,
      "filename": "ScheduledTask.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "order": 94
  },
  {
    "id": "Base#client",
    "longname": "Base#client",
    "name": "client",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The client that initialized this base</p>",
    "memberof": "Base",
    "type": {
      "names": [
        "InlustrisClient"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 22,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 103
  },
  {
    "id": "Base#options",
    "longname": "Base#options",
    "name": "options",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The options for this base</p>",
    "memberof": "Base",
    "type": {
      "names": [
        "BaseOptions"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 30,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 104
  },
  {
    "id": "Base#registry",
    "longname": "Base#registry",
    "name": "registry",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The Registry that holds this base</p>",
    "memberof": "Base",
    "type": {
      "names": [
        "BaseStore"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 38,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 105
  },
  {
    "id": "Base#id",
    "longname": "Base#id",
    "name": "id",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The ID of this base</p>",
    "memberof": "Base",
    "params": [],
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 47,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 106
  },
  {
    "id": "Base#enabled",
    "longname": "Base#enabled",
    "name": "enabled",
    "kind": "member",
    "scope": "instance",
    "description": "<p>Whether this base is enabled</p>",
    "memberof": "Base",
    "params": [],
    "type": {
      "names": [
        "boolean"
      ]
    },
    "meta": {
      "lineno": 56,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 107
  },
  {
    "id": "Command#separator",
    "longname": "Command#separator",
    "name": "separator",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The separator for argument generators</p>",
    "memberof": "Command",
    "type": {
      "names": [
        "string"
      ]
    },
    "meta": {
      "lineno": 26,
      "filename": "Command.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 113
  },
  {
    "id": "Event#event",
    "longname": "Event#event",
    "name": "event",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The event this base listens to</p>",
    "memberof": "Event",
    "params": [],
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 24,
      "filename": "Event.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 117
  },
  {
    "id": "Event#once",
    "longname": "Event#once",
    "name": "once",
    "kind": "member",
    "scope": "instance",
    "description": "<p>Whether this event is emitted once or not</p>",
    "memberof": "Event",
    "params": [],
    "type": {
      "names": [
        "boolean"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 59,
      "filename": "Event.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 120
  },
  {
    "id": "Cron#cron",
    "longname": "Cron#cron",
    "name": "cron",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The cron string that generated this</p>",
    "memberof": "Cron",
    "type": {
      "names": [
        "string"
      ]
    },
    "meta": {
      "lineno": 27,
      "filename": "Cron.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 167
  },
  {
    "id": "Cron#normalized",
    "longname": "Cron#normalized",
    "name": "normalized",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The normalized cron string</p>",
    "memberof": "Cron",
    "type": {
      "names": [
        "string"
      ]
    },
    "meta": {
      "lineno": 32,
      "filename": "Cron.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 168
  },
  {
    "id": "List#_array",
    "longname": "List#_array",
    "name": "_array",
    "kind": "member",
    "scope": "instance",
    "description": "<p>Cached array for the <code>array()</code> method - will be reset to <code>null</code> whenever <code>add()</code> or <code>delete()</code> is called</p>",
    "memberof": "List",
    "type": {
      "names": [
        "Array"
      ]
    },
    "nullable": true,
    "access": "private",
    "meta": {
      "lineno": 13,
      "filename": "List.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 176
  },
  {
    "id": "Type#value",
    "longname": "Type#value",
    "name": "value",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The value to generate a deep Type of</p>",
    "memberof": "Type",
    "type": {
      "names": [
        "*"
      ]
    },
    "meta": {
      "lineno": 25,
      "filename": "Type.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 198
  },
  {
    "id": "Type#is",
    "longname": "Type#is",
    "name": "is",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The shallow type of this</p>",
    "memberof": "Type",
    "type": {
      "names": [
        "string"
      ]
    },
    "meta": {
      "lineno": 31,
      "filename": "Type.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 199
  },
  {
    "id": "Type#parent",
    "longname": "Type#parent",
    "name": "parent",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The parent of this type</p>",
    "memberof": "Type",
    "type": {
      "names": [
        "Type"
      ]
    },
    "nullable": true,
    "access": "private",
    "meta": {
      "lineno": 37,
      "filename": "Type.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 200
  },
  {
    "id": "Type#childKeys",
    "longname": "Type#childKeys",
    "name": "childKeys",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The child keys of this Type</p>",
    "memberof": "Type",
    "type": {
      "names": [
        "Map.<string, Type>"
      ]
    },
    "access": "private",
    "meta": {
      "lineno": 44,
      "filename": "Type.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 201
  },
  {
    "id": "Type#childValues",
    "longname": "Type#childValues",
    "name": "childValues",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The child values of this Type</p>",
    "memberof": "Type",
    "type": {
      "names": [
        "Map.<string, Type>"
      ]
    },
    "access": "private",
    "meta": {
      "lineno": 51,
      "filename": "Type.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 202
  },
  {
    "id": "Type#childTypes",
    "longname": "Type#childTypes",
    "name": "childTypes",
    "kind": "member",
    "scope": "instance",
    "description": "<p>The type string for the children of this Type</p>",
    "memberof": "Type",
    "params": [],
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "access": "private",
    "meta": {
      "lineno": 59,
      "filename": "Type.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 203
  },
  {
    "id": "CommandRegistry#holds",
    "longname": "CommandRegistry#holds",
    "name": "holds",
    "kind": "member",
    "scope": "instance",
    "inherits": "BaseRegistry#holds",
    "inherited": true,
    "overrides": "BaseRegistry#holds",
    "description": "<p>The client that this Registry is for</p>",
    "memberof": "CommandRegistry",
    "type": {
      "names": [
        "InlustrisClient"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 33,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 226
  },
  {
    "id": "CommandRegistry#name",
    "longname": "CommandRegistry#name",
    "name": "name",
    "kind": "member",
    "scope": "instance",
    "inherits": "BaseRegistry#name",
    "inherited": true,
    "overrides": "BaseRegistry#name",
    "description": "<p>The name of the Registry</p>",
    "memberof": "CommandRegistry",
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 41,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 227
  },
  {
    "id": "CommandRegistry#coreDirectories",
    "longname": "CommandRegistry#coreDirectories",
    "name": "coreDirectories",
    "kind": "member",
    "scope": "instance",
    "inherits": "BaseRegistry#coreDirectories",
    "inherited": true,
    "overrides": "BaseRegistry#coreDirectories",
    "description": "<p>The core directories where bases are located</p>",
    "memberof": "CommandRegistry",
    "type": {
      "names": [
        "List.<string>"
      ]
    },
    "readonly": true,
    "access": "private",
    "meta": {
      "lineno": 57,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 228
  },
  {
    "id": "CommandRegistry#userDirectory",
    "longname": "CommandRegistry#userDirectory",
    "name": "userDirectory",
    "kind": "member",
    "scope": "instance",
    "inherits": "BaseRegistry#userDirectory",
    "inherited": true,
    "overrides": "BaseRegistry#userDirectory",
    "description": "<p>The directory where the bases are found</p>",
    "memberof": "CommandRegistry",
    "type": {
      "names": [
        "string"
      ]
    },
    "meta": {
      "lineno": 77,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 230
  },
  {
    "id": "EventRegistry#holds",
    "longname": "EventRegistry#holds",
    "name": "holds",
    "kind": "member",
    "scope": "instance",
    "inherits": "BaseRegistry#holds",
    "inherited": true,
    "overrides": "BaseRegistry#holds",
    "description": "<p>The client that this Registry is for</p>",
    "memberof": "EventRegistry",
    "type": {
      "names": [
        "InlustrisClient"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 33,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 233
  },
  {
    "id": "EventRegistry#name",
    "longname": "EventRegistry#name",
    "name": "name",
    "kind": "member",
    "scope": "instance",
    "inherits": "BaseRegistry#name",
    "inherited": true,
    "overrides": "BaseRegistry#name",
    "description": "<p>The name of the Registry</p>",
    "memberof": "EventRegistry",
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 41,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 234
  },
  {
    "id": "EventRegistry#coreDirectories",
    "longname": "EventRegistry#coreDirectories",
    "name": "coreDirectories",
    "kind": "member",
    "scope": "instance",
    "inherits": "BaseRegistry#coreDirectories",
    "inherited": true,
    "overrides": "BaseRegistry#coreDirectories",
    "description": "<p>The core directories where bases are located</p>",
    "memberof": "EventRegistry",
    "type": {
      "names": [
        "List.<string>"
      ]
    },
    "readonly": true,
    "access": "private",
    "meta": {
      "lineno": 57,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 235
  },
  {
    "id": "EventRegistry#userDirectory",
    "longname": "EventRegistry#userDirectory",
    "name": "userDirectory",
    "kind": "member",
    "scope": "instance",
    "inherits": "BaseRegistry#userDirectory",
    "inherited": true,
    "overrides": "BaseRegistry#userDirectory",
    "description": "<p>The directory where the bases are found</p>",
    "memberof": "EventRegistry",
    "type": {
      "names": [
        "string"
      ]
    },
    "meta": {
      "lineno": 77,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 237
  },
  {
    "id": "TaskRegistry#holds",
    "longname": "TaskRegistry#holds",
    "name": "holds",
    "kind": "member",
    "scope": "instance",
    "inherits": "BaseRegistry#holds",
    "inherited": true,
    "overrides": "BaseRegistry#holds",
    "description": "<p>The client that this Registry is for</p>",
    "memberof": "TaskRegistry",
    "type": {
      "names": [
        "InlustrisClient"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 33,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 239
  },
  {
    "id": "TaskRegistry#name",
    "longname": "TaskRegistry#name",
    "name": "name",
    "kind": "member",
    "scope": "instance",
    "inherits": "BaseRegistry#name",
    "inherited": true,
    "overrides": "BaseRegistry#name",
    "description": "<p>The name of the Registry</p>",
    "memberof": "TaskRegistry",
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 41,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 240
  },
  {
    "id": "TaskRegistry#coreDirectories",
    "longname": "TaskRegistry#coreDirectories",
    "name": "coreDirectories",
    "kind": "member",
    "scope": "instance",
    "inherits": "BaseRegistry#coreDirectories",
    "inherited": true,
    "overrides": "BaseRegistry#coreDirectories",
    "description": "<p>The core directories where bases are located</p>",
    "memberof": "TaskRegistry",
    "type": {
      "names": [
        "List.<string>"
      ]
    },
    "readonly": true,
    "access": "private",
    "meta": {
      "lineno": 57,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 241
  },
  {
    "id": "TaskRegistry#userDirectory",
    "longname": "TaskRegistry#userDirectory",
    "name": "userDirectory",
    "kind": "member",
    "scope": "instance",
    "inherits": "BaseRegistry#userDirectory",
    "inherited": true,
    "overrides": "BaseRegistry#userDirectory",
    "description": "<p>The directory where the bases are found</p>",
    "memberof": "TaskRegistry",
    "type": {
      "names": [
        "string"
      ]
    },
    "meta": {
      "lineno": 77,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 243
  },
  {
    "id": "Command#client",
    "longname": "Command#client",
    "name": "client",
    "kind": "member",
    "scope": "instance",
    "inherits": "Base#client",
    "inherited": true,
    "overrides": "Base#client",
    "description": "<p>The client that initialized this base</p>",
    "memberof": "Command",
    "type": {
      "names": [
        "InlustrisClient"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 22,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 247
  },
  {
    "id": "Command#options",
    "longname": "Command#options",
    "name": "options",
    "kind": "member",
    "scope": "instance",
    "inherits": "Base#options",
    "inherited": true,
    "overrides": "Base#options",
    "description": "<p>The options for this base</p>",
    "memberof": "Command",
    "type": {
      "names": [
        "BaseOptions"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 30,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 248
  },
  {
    "id": "Command#registry",
    "longname": "Command#registry",
    "name": "registry",
    "kind": "member",
    "scope": "instance",
    "inherits": "Base#registry",
    "inherited": true,
    "overrides": "Base#registry",
    "description": "<p>The Registry that holds this base</p>",
    "memberof": "Command",
    "type": {
      "names": [
        "BaseStore"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 38,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 249
  },
  {
    "id": "Command#id",
    "longname": "Command#id",
    "name": "id",
    "kind": "member",
    "scope": "instance",
    "inherits": "Base#id",
    "inherited": true,
    "overrides": "Base#id",
    "description": "<p>The ID of this base</p>",
    "memberof": "Command",
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 47,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 250
  },
  {
    "id": "Command#enabled",
    "longname": "Command#enabled",
    "name": "enabled",
    "kind": "member",
    "scope": "instance",
    "inherits": "Base#enabled",
    "inherited": true,
    "overrides": "Base#enabled",
    "description": "<p>Whether this base is enabled</p>",
    "memberof": "Command",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "meta": {
      "lineno": 56,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 251
  },
  {
    "id": "Event#client",
    "longname": "Event#client",
    "name": "client",
    "kind": "member",
    "scope": "instance",
    "inherits": "Base#client",
    "inherited": true,
    "overrides": "Base#client",
    "description": "<p>The client that initialized this base</p>",
    "memberof": "Event",
    "type": {
      "names": [
        "InlustrisClient"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 22,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 255
  },
  {
    "id": "Event#options",
    "longname": "Event#options",
    "name": "options",
    "kind": "member",
    "scope": "instance",
    "inherits": "Base#options",
    "inherited": true,
    "overrides": "Base#options",
    "description": "<p>The options for this base</p>",
    "memberof": "Event",
    "type": {
      "names": [
        "BaseOptions"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 30,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 256
  },
  {
    "id": "Event#registry",
    "longname": "Event#registry",
    "name": "registry",
    "kind": "member",
    "scope": "instance",
    "inherits": "Base#registry",
    "inherited": true,
    "overrides": "Base#registry",
    "description": "<p>The Registry that holds this base</p>",
    "memberof": "Event",
    "type": {
      "names": [
        "BaseStore"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 38,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 257
  },
  {
    "id": "Event#id",
    "longname": "Event#id",
    "name": "id",
    "kind": "member",
    "scope": "instance",
    "inherits": "Base#id",
    "inherited": true,
    "overrides": "Base#id",
    "description": "<p>The ID of this base</p>",
    "memberof": "Event",
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 47,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 258
  },
  {
    "id": "Event#enabled",
    "longname": "Event#enabled",
    "name": "enabled",
    "kind": "member",
    "scope": "instance",
    "inherits": "Base#enabled",
    "inherited": true,
    "overrides": "Base#enabled",
    "description": "<p>Whether this base is enabled</p>",
    "memberof": "Event",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "meta": {
      "lineno": 56,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 259
  },
  {
    "id": "Task#client",
    "longname": "Task#client",
    "name": "client",
    "kind": "member",
    "scope": "instance",
    "inherits": "Base#client",
    "inherited": true,
    "description": "<p>The client that initialized this base</p>",
    "memberof": "Task",
    "type": {
      "names": [
        "InlustrisClient"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 22,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 261
  },
  {
    "id": "Task#options",
    "longname": "Task#options",
    "name": "options",
    "kind": "member",
    "scope": "instance",
    "inherits": "Base#options",
    "inherited": true,
    "description": "<p>The options for this base</p>",
    "memberof": "Task",
    "type": {
      "names": [
        "BaseOptions"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 30,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 262
  },
  {
    "id": "Task#registry",
    "longname": "Task#registry",
    "name": "registry",
    "kind": "member",
    "scope": "instance",
    "inherits": "Base#registry",
    "inherited": true,
    "description": "<p>The Registry that holds this base</p>",
    "memberof": "Task",
    "type": {
      "names": [
        "BaseStore"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 38,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 263
  },
  {
    "id": "Task#id",
    "longname": "Task#id",
    "name": "id",
    "kind": "member",
    "scope": "instance",
    "inherits": "Base#id",
    "inherited": true,
    "description": "<p>The ID of this base</p>",
    "memberof": "Task",
    "type": {
      "names": [
        "string"
      ]
    },
    "readonly": true,
    "meta": {
      "lineno": 47,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 264
  },
  {
    "id": "Task#enabled",
    "longname": "Task#enabled",
    "name": "enabled",
    "kind": "member",
    "scope": "instance",
    "inherits": "Base#enabled",
    "inherited": true,
    "description": "<p>Whether this base is enabled</p>",
    "memberof": "Task",
    "type": {
      "names": [
        "boolean"
      ]
    },
    "meta": {
      "lineno": 56,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 265
  },
  {
    "id": "InlustrisClient#fetchApplication",
    "longname": "InlustrisClient#fetchApplication",
    "name": "fetchApplication",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Does the same as <a href=\"https://discord.js.org/#/docs/main/master/class/Client?scrollTo=fetchApplication\">Client#fetchApplication()</a> but attaches the resolved value to {@link InlustrisClient#application}</p>",
    "memberof": "InlustrisClient",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<external:ClientApplication>"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 228,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "async": true,
    "order": 22
  },
  {
    "id": "InlustrisClient#login",
    "longname": "InlustrisClient#login",
    "name": "login",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Deprecated method, throws an error on use, use {@link InlustrisClient#start} to start the client</p>",
    "memberof": "InlustrisClient",
    "params": [],
    "deprecated": true,
    "exceptions": [
      {
        "type": {
          "names": [
            "InlustrisError"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 237,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 23
  },
  {
    "id": "InlustrisClient#start",
    "longname": "InlustrisClient#start",
    "name": "start",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Loads and initializes the plugins, and logs the client in.</p>",
    "memberof": "InlustrisClient",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<string>"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 246,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "async": true,
    "order": 24
  },
  {
    "id": "InlustrisClient#load",
    "longname": "InlustrisClient#load",
    "name": "load",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Loads all the plugins called in the options or with <code>InlustrisClient#use</code>.</p>",
    "memberof": "InlustrisClient",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<List.<string>>"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 260,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "async": true,
    "order": 25
  },
  {
    "id": "InlustrisClient#_resolvePlugin",
    "longname": "InlustrisClient#_resolvePlugin",
    "name": "_resolvePlugin",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Internal method. Resolves a plugin as internal or external.</p>",
    "memberof": "InlustrisClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>Name of the plugin to resolve</p>",
        "name": "plugin"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string",
            "InlustrisPlugin"
          ]
        }
      }
    ],
    "access": "private",
    "meta": {
      "lineno": 276,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 26
  },
  {
    "id": "InlustrisClient#use",
    "longname": "InlustrisClient#use",
    "name": "use",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Designates a plugin to load, will be loaded on start.</p>",
    "memberof": "InlustrisClient",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>The name of a plugin to load, will be required if it's external</p>",
        "name": "mod"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "InlustrisClient"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 306,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 27
  },
  {
    "id": "InlustrisClient#_loadPlugin",
    "longname": "InlustrisClient#_loadPlugin",
    "name": "_loadPlugin",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Internal method. Loads an extenral plugin after being required.</p>",
    "memberof": "InlustrisClient",
    "params": [
      {
        "type": {
          "names": [
            "InlustrisPlugin"
          ]
        },
        "description": "<p>The plugin to load</p>",
        "name": "plugin"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ],
    "access": "private",
    "meta": {
      "lineno": 317,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "async": true,
    "order": 28
  },
  {
    "id": "InlustrisClient#isOwner",
    "longname": "InlustrisClient#isOwner",
    "name": "isOwner",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Checks if the given user is an owner of the bot.</p>",
    "memberof": "InlustrisClient",
    "params": [
      {
        "type": {
          "names": [
            "external:UserResolvable"
          ]
        },
        "description": "<p>The user to check</p>",
        "name": "user"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 332,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 29
  },
  {
    "id": "InlustrisClient#@@iterator",
    "longname": "InlustrisClient#@@iterator",
    "name": "@@iterator",
    "kind": "function",
    "scope": "instance",
    "description": "<p>An iterator containing the list of plugins.</p>",
    "meta": {
      "lineno": 347,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "generator": true,
    "memberof": "InlustrisClient",
    "returns": [
      {
        "type": {
          "names": [
            "Iterator.<string>"
          ]
        }
      }
    ],
    "order": 30
  },
  {
    "id": "BaseRegistry#registerCoreDirectory",
    "longname": "BaseRegistry#registerCoreDirectory",
    "name": "registerCoreDirectory",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Registers a core directory.</p>",
    "memberof": "BaseRegistry",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>The directory to register</p>",
        "name": "directory"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "this"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 67,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 49
  },
  {
    "id": "BaseRegistry#loadAll",
    "longname": "BaseRegistry#loadAll",
    "name": "loadAll",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Loads all the bases found in the core directories.</p>",
    "memberof": "BaseRegistry",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<number>"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 85,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "async": true,
    "order": 51
  },
  {
    "id": "BaseRegistry#load",
    "longname": "BaseRegistry#load",
    "name": "load",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Loads a base into the registry.</p>",
    "memberof": "BaseRegistry",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>The directory of the base</p>",
        "name": "directory"
      },
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        },
        "description": "<p>The file location of the base</p>",
        "name": "file"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Base"
          ]
        },
        "nullable": true
      }
    ],
    "meta": {
      "lineno": 96,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 52
  },
  {
    "id": "BaseRegistry#add",
    "longname": "BaseRegistry#add",
    "name": "add",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Adds a base to the registry.</p>",
    "memberof": "BaseRegistry",
    "params": [
      {
        "type": {
          "names": [
            "Base"
          ]
        },
        "description": "<p>The base to be added</p>",
        "name": "base"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Base"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 118,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 53
  },
  {
    "id": "CommandRegistry#add",
    "longname": "CommandRegistry#add",
    "name": "add",
    "kind": "function",
    "scope": "instance",
    "overrides": "BaseRegistry#add",
    "description": "<p>Adds a Command to the registry, and it's aliases.</p>",
    "memberof": "CommandRegistry",
    "params": [
      {
        "type": {
          "names": [
            "Command"
          ]
        },
        "description": "<p>The command to add</p>",
        "name": "base"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Command"
          ]
        },
        "nullable": true
      }
    ],
    "meta": {
      "lineno": 23,
      "filename": "CommandRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 57
  },
  {
    "id": "CommandRegistry#get",
    "longname": "CommandRegistry#get",
    "name": "get",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Gets a command by ID or an alias.</p>",
    "memberof": "CommandRegistry",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>The command ID or alias</p>",
        "name": "key"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Command"
          ]
        },
        "nullable": true
      }
    ],
    "meta": {
      "lineno": 35,
      "filename": "CommandRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 58
  },
  {
    "id": "CommandRegistry#has",
    "longname": "CommandRegistry#has",
    "name": "has",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Whether or not an ID or alias is in the command registry.</p>",
    "memberof": "CommandRegistry",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>The ID or an alias of the command</p>",
        "name": "name"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 44,
      "filename": "CommandRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 59
  },
  {
    "id": "CommandRegistry#delete",
    "longname": "CommandRegistry#delete",
    "name": "delete",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Deletes a command from the registry, and clears it's aliases.</p>",
    "memberof": "CommandRegistry",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>The ID or an alias of the command</p>",
        "name": "key"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 53,
      "filename": "CommandRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 60
  },
  {
    "id": "CommandRegistry#clear",
    "longname": "CommandRegistry#clear",
    "name": "clear",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Clears the registry and the aliases.</p>",
    "memberof": "CommandRegistry",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 65,
      "filename": "CommandRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 61
  },
  {
    "id": "EventRegistry#load",
    "longname": "EventRegistry#load",
    "name": "load",
    "kind": "function",
    "scope": "instance",
    "overrides": "BaseRegistry#load",
    "description": "<p>Loads the event, and checks if it's already been ran.</p>",
    "memberof": "EventRegistry",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>The directory to load from</p>",
        "name": "directory"
      },
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        },
        "description": "<p>The file location of the event</p>",
        "name": "file"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Event"
          ]
        },
        "nullable": true
      }
    ],
    "meta": {
      "lineno": 24,
      "filename": "EventRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 63
  },
  {
    "id": "EventRegistry#clear",
    "longname": "EventRegistry#clear",
    "name": "clear",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Clears the events.</p>",
    "memberof": "EventRegistry",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 35,
      "filename": "EventRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 64
  },
  {
    "id": "EventRegistry#delete",
    "longname": "EventRegistry#delete",
    "name": "delete",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Unlistens to and deletes an event.</p>",
    "memberof": "EventRegistry",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>The ID of the event</p>",
        "name": "id"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 43,
      "filename": "EventRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 65
  },
  {
    "id": "EventRegistry#add",
    "longname": "EventRegistry#add",
    "name": "add",
    "kind": "function",
    "scope": "instance",
    "overrides": "BaseRegistry#add",
    "description": "<p>Adds an event to the registry, and attaches it to an event emitter.</p>",
    "memberof": "EventRegistry",
    "params": [
      {
        "type": {
          "names": [
            "Event"
          ]
        },
        "description": "<p>The event to load</p>",
        "name": "base"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Event"
          ]
        },
        "nullable": true
      }
    ],
    "meta": {
      "lineno": 55,
      "filename": "EventRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 66
  },
  {
    "id": "Schedule#init",
    "longname": "Schedule#init",
    "name": "init",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Initializes the schedule, placeholder while I work on settings.\nCalled when the client is ready.</p>",
    "memberof": "Schedule",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<void>"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 36,
      "filename": "Schedule.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "async": true,
    "order": 72
  },
  {
    "id": "Schedule#create",
    "longname": "Schedule#create",
    "name": "create",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Creates a task and adds it to the schedule.</p>",
    "memberof": "Schedule",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>The name of the task in the task registry</p>",
        "name": "taskName"
      },
      {
        "type": {
          "names": [
            "string",
            "number",
            "Date"
          ]
        },
        "description": "<p>The time for the task</p>",
        "name": "time"
      },
      {
        "type": {
          "names": [
            "ScheduledTaskOptions"
          ]
        },
        "optional": true,
        "description": "<p>The options for the task</p>",
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<ScheduledTask>"
          ]
        },
        "nullable": true
      }
    ],
    "meta": {
      "lineno": 45,
      "filename": "Schedule.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "async": true,
    "order": 73
  },
  {
    "id": "Schedule#clear",
    "longname": "Schedule#clear",
    "name": "clear",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Clears the tasks.</p>",
    "memberof": "Schedule",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 57,
      "filename": "Schedule.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "order": 74
  },
  {
    "id": "Schedule#get",
    "longname": "Schedule#get",
    "name": "get",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Gets a task by ID.</p>",
    "memberof": "Schedule",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>The ID of the task</p>",
        "name": "id"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "ScheduledTask"
          ]
        },
        "nullable": true
      }
    ],
    "meta": {
      "lineno": 65,
      "filename": "Schedule.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "order": 75
  },
  {
    "id": "Schedule#next",
    "longname": "Schedule#next",
    "name": "next",
    "kind": "function",
    "scope": "instance",
    "description": "<p>The next task in the schedule.</p>",
    "memberof": "Schedule",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "ScheduledTask"
          ]
        },
        "nullable": true
      }
    ],
    "meta": {
      "lineno": 74,
      "filename": "Schedule.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "order": 76
  },
  {
    "id": "Schedule#_add",
    "longname": "Schedule#_add",
    "name": "_add",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Adds a task to the schedule, called internally with <code>Schedule#create</code>.</p>",
    "memberof": "Schedule",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>The name of the task within the registry</p>",
        "name": "taskName"
      },
      {
        "type": {
          "names": [
            "string",
            "number",
            "Date"
          ]
        },
        "description": "<p>The time for the task to run</p>",
        "name": "time"
      },
      {
        "type": {
          "names": [
            "ScheduledTaskOptions"
          ]
        },
        "optional": true,
        "defaultvalue": "{}",
        "description": "<p>The options for the task</p>",
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<?ScheduledTask>"
          ]
        }
      }
    ],
    "access": "private",
    "meta": {
      "lineno": 82,
      "filename": "Schedule.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "async": true,
    "order": 77
  },
  {
    "id": "Schedule#delete",
    "longname": "Schedule#delete",
    "name": "delete",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Deletes a task from the schedule.</p>",
    "memberof": "Schedule",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>The ID of the task</p>",
        "name": "id"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<Schedule>"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 106,
      "filename": "Schedule.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "async": true,
    "order": 78
  },
  {
    "id": "Schedule#_insert",
    "longname": "Schedule#_insert",
    "name": "_insert",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Inserts a task into the schedule.</p>",
    "memberof": "Schedule",
    "params": [
      {
        "type": {
          "names": [
            "ScheduledTask"
          ]
        },
        "description": "<p>The task to insert</p>",
        "name": "task"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "ScheduledTask"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 120,
      "filename": "Schedule.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "order": 79
  },
  {
    "id": "Schedule#execute",
    "longname": "Schedule#execute",
    "name": "execute",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Executes tasks that need to be executed.</p>",
    "memberof": "Schedule",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<void>"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 132,
      "filename": "Schedule.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "async": true,
    "order": 80
  },
  {
    "id": "Schedule#_clearInterval",
    "longname": "Schedule#_clearInterval",
    "name": "_clearInterval",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Clears the interval if no tasks are found.</p>",
    "memberof": "Schedule",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ],
    "access": "private",
    "meta": {
      "lineno": 151,
      "filename": "Schedule.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "order": 81
  },
  {
    "id": "Schedule#_checkInterval",
    "longname": "Schedule#_checkInterval",
    "name": "_checkInterval",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Sets an interval if one needs to be set.</p>",
    "memberof": "Schedule",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ],
    "access": "private",
    "meta": {
      "lineno": 161,
      "filename": "Schedule.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "order": 82
  },
  {
    "id": "Schedule#@@iterator",
    "longname": "Schedule#@@iterator",
    "name": "@@iterator",
    "kind": "function",
    "scope": "instance",
    "description": "<p>An iterator yielding all the tasks.</p>",
    "meta": {
      "lineno": 171,
      "filename": "Schedule.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "generator": true,
    "memberof": "Schedule",
    "returns": [
      {
        "type": {
          "names": [
            "Iterator.<ScheduledTask>"
          ]
        }
      }
    ],
    "order": 83
  },
  {
    "id": "ScheduledTask#run",
    "longname": "ScheduledTask#run",
    "name": "run",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Runs the task, passing data to the appropriate task</p>",
    "memberof": "ScheduledTask",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<ScheduledTask>"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 103,
      "filename": "ScheduledTask.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "async": true,
    "order": 95
  },
  {
    "id": "ScheduledTask#update",
    "longname": "ScheduledTask#update",
    "name": "update",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Updates a task, called if a task is recurring.</p>",
    "memberof": "ScheduledTask",
    "params": [
      {
        "type": {
          "names": [
            "ScheduledTaskUpdateOptions"
          ]
        },
        "optional": true,
        "description": "<p>The options to update the task with</p>",
        "name": "options"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<ScheduledTask>"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 121,
      "filename": "ScheduledTask.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "async": true,
    "order": 96
  },
  {
    "id": "ScheduledTask#delete",
    "longname": "ScheduledTask#delete",
    "name": "delete",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Deletes the task from the schedule.</p>",
    "memberof": "ScheduledTask",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<Schedule>"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 138,
      "filename": "ScheduledTask.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "order": 97
  },
  {
    "id": "Base#enable",
    "longname": "Base#enable",
    "name": "enable",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Enables the base. Shortcut for <code>&lt;base&gt;.enabled = true</code>.</p>",
    "memberof": "Base",
    "params": [],
    "fires": [
      "InlustrisClient#event:baseEnabled"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Base"
          ]
        }
      }
    ],
    "chainable": true,
    "meta": {
      "lineno": 69,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 108
  },
  {
    "id": "Base#disable",
    "longname": "Base#disable",
    "name": "disable",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Disables the base. Shortcut for <code>&lt;base&gt;.enabled = false</code>.</p>",
    "memberof": "Base",
    "params": [],
    "fires": [
      "InlustrisClient#event:baseDisabled"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Base"
          ]
        }
      }
    ],
    "chainable": true,
    "meta": {
      "lineno": 80,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 109
  },
  {
    "id": "Base#unload",
    "longname": "Base#unload",
    "name": "unload",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Unloads the base, and deletes it from the registry.</p>",
    "memberof": "Base",
    "params": [],
    "fires": [
      "InlustrisClient#event:baseUnloaded"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 91,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 110
  },
  {
    "id": "Command#args",
    "longname": "Command#args",
    "name": "args",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Abstract argument generator, needs to be used if arguments are needed with commands.</p>",
    "meta": {
      "lineno": 42,
      "filename": "Command.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "virtual": true,
    "memberof": "Command",
    "params": [],
    "generator": true,
    "order": 114
  },
  {
    "id": "Event#enable",
    "longname": "Event#enable",
    "name": "enable",
    "kind": "function",
    "scope": "instance",
    "overrides": "Base#enable",
    "description": "<p>Enables the event, and adds the listener to the event emitter.</p>",
    "memberof": "Event",
    "params": [],
    "fires": [
      "InlustrisClient#event:baseEnabled"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Event"
          ]
        }
      }
    ],
    "chainable": true,
    "meta": {
      "lineno": 37,
      "filename": "Event.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 118
  },
  {
    "id": "Event#disable",
    "longname": "Event#disable",
    "name": "disable",
    "kind": "function",
    "scope": "instance",
    "overrides": "Base#disable",
    "description": "<p>Disables the event, and removes the listener from the event emitter.</p>",
    "memberof": "Event",
    "params": [],
    "fires": [
      "InlustrisClient#event:baseDisabled"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Event"
          ]
        }
      }
    ],
    "chainable": true,
    "meta": {
      "lineno": 48,
      "filename": "Event.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 119
  },
  {
    "id": "Event#_run",
    "longname": "Event#_run",
    "name": "_run",
    "kind": "function",
    "scope": "instance",
    "description": "<p>The private method to bind to an event emitter.</p>",
    "memberof": "Event",
    "params": [
      {
        "type": {
          "names": [
            "any"
          ]
        },
        "optional": true,
        "variable": true,
        "description": "<p>Args emitted to the event</p>",
        "name": "args"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ],
    "access": "private",
    "meta": {
      "lineno": 76,
      "filename": "Event.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "async": true,
    "order": 121
  },
  {
    "id": "Event#_runOnce",
    "longname": "Event#_runOnce",
    "name": "_runOnce",
    "kind": "function",
    "scope": "instance",
    "description": "<p>The private method to bind to an event emitter, for use once.</p>",
    "memberof": "Event",
    "params": [
      {
        "type": {
          "names": [
            "any"
          ]
        },
        "optional": true,
        "variable": true,
        "description": "<p>Args emitted to the event</p>",
        "name": "args"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ],
    "access": "private",
    "meta": {
      "lineno": 90,
      "filename": "Event.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "async": true,
    "order": 122
  },
  {
    "id": "Event#_listen",
    "longname": "Event#_listen",
    "name": "_listen",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Attaches the event to an event emitter.</p>",
    "memberof": "Event",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ],
    "access": "private",
    "meta": {
      "lineno": 103,
      "filename": "Event.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 123
  },
  {
    "id": "Event#_unlisten",
    "longname": "Event#_unlisten",
    "name": "_unlisten",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Unlistens to an event, removing the listener from the EventEmitter</p>",
    "memberof": "Event",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ],
    "access": "private",
    "meta": {
      "lineno": 112,
      "filename": "Event.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 124
  },
  {
    "id": "ClientUtil#resolveUser",
    "longname": "ClientUtil#resolveUser",
    "name": "resolveUser",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Resolves a user from a string, such as an ID, a name, or a mention.</p>",
    "memberof": "ClientUtil",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>Text to resolve</p>",
        "name": "text"
      },
      {
        "type": {
          "names": [
            "Collection.<Snowflake, User>"
          ]
        },
        "description": "<p>Collection of users to find in</p>",
        "name": "users"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes finding by name case sensitive</p>",
        "name": "caseSensitive"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes finding by name match whole word only</p>",
        "name": "wholeWord"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "external:User"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 14,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 127
  },
  {
    "id": "ClientUtil#resolveUsers",
    "longname": "ClientUtil#resolveUsers",
    "name": "resolveUsers",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Resolves multiple users from a string, such as an ID, a name, or a mention.</p>",
    "memberof": "ClientUtil",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>Text to resolve</p>",
        "name": "text"
      },
      {
        "type": {
          "names": [
            "Collection.<Snowflake, User>"
          ]
        },
        "description": "<p>Collection of users to find in</p>",
        "name": "users"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes finding by name case sensitive</p>",
        "name": "caseSensitive"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes finding by name match whole word only</p>",
        "name": "wholeWord"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Collection.<Snowflake, User>"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 26,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 128
  },
  {
    "id": "ClientUtil#checkUser",
    "longname": "ClientUtil#checkUser",
    "name": "checkUser",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Checks if a string could be referring to a user.</p>",
    "memberof": "ClientUtil",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>Text to check</p>",
        "name": "text"
      },
      {
        "type": {
          "names": [
            "external:User"
          ]
        },
        "description": "<p>User to check</p>",
        "name": "user"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes checking by name case sensitive</p>",
        "name": "caseSensitive"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes checking by name match whole word only</p>",
        "name": "wholeWord"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 38,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 129
  },
  {
    "id": "ClientUtil#resolveMember",
    "longname": "ClientUtil#resolveMember",
    "name": "resolveMember",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Resolves a member from a string, such as an ID, a name, or a mention.</p>",
    "memberof": "ClientUtil",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>Text to resolve</p>",
        "name": "text"
      },
      {
        "type": {
          "names": [
            "Collection.<Snowflake, GuildMember>"
          ]
        },
        "description": "<p>Collection of members to find in</p>",
        "name": "members"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes finding by name case sensitive</p>",
        "name": "caseSensitive"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes finding by name match whole word only</p>",
        "name": "wholeWord"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "external:GuildMember"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 67,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 130
  },
  {
    "id": "ClientUtil#resolveMembers",
    "longname": "ClientUtil#resolveMembers",
    "name": "resolveMembers",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Resolves multiple members from a string, such as an ID, a name, or a mention.</p>",
    "memberof": "ClientUtil",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>Text to resolve</p>",
        "name": "text"
      },
      {
        "type": {
          "names": [
            "Collection.<Snowflake, GuildMember>"
          ]
        },
        "description": "<p>Collection of members to find in</p>",
        "name": "members"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes finding by name case sensitive</p>",
        "name": "caseSensitive"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes finding by name match whole word only</p>",
        "name": "wholeWord"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Collection.<Snowflake, GuildMember>"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 79,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 131
  },
  {
    "id": "ClientUtil#checkMember",
    "longname": "ClientUtil#checkMember",
    "name": "checkMember",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Checks if a string could be referring to a member.</p>",
    "memberof": "ClientUtil",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>Text to check</p>",
        "name": "text"
      },
      {
        "type": {
          "names": [
            "external:GuildMember"
          ]
        },
        "description": "<p>Member to check</p>",
        "name": "member"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes checking by name case sensitive</p>",
        "name": "caseSensitive"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes checking by name match whole word only</p>",
        "name": "wholeWord"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 91,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 132
  },
  {
    "id": "ClientUtil#resolveChannel",
    "longname": "ClientUtil#resolveChannel",
    "name": "resolveChannel",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Resolves a channel from a string, such as ID, a name, or a mention.</p>",
    "memberof": "ClientUtil",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>Text to resolve</p>",
        "name": "text"
      },
      {
        "type": {
          "names": [
            "Collection.<Snowflake, GuildChannel>"
          ]
        },
        "description": "<p>Collection of channels to find in</p>",
        "name": "channels"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes finding by name case sensitive</p>",
        "name": "caseSensitive"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes finding by name match whole word only</p>",
        "name": "wholeWord"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "external:GuildChannel"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 123,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 133
  },
  {
    "id": "ClientUtil#resolveChannels",
    "longname": "ClientUtil#resolveChannels",
    "name": "resolveChannels",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Resolves multiple channels from a string, such as an ID, a name, or a mention.</p>",
    "memberof": "ClientUtil",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>Text to resolve</p>",
        "name": "text"
      },
      {
        "type": {
          "names": [
            "Collection.<Snowflake, GuildChannel>"
          ]
        },
        "description": "<p>Collection of channels to find in</p>",
        "name": "channels"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes finding by name case sensitive</p>",
        "name": "caseSensitive"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes finding by name match whole word only</p>",
        "name": "wholeWord"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Collection.<Snowflake, GuildChannel>"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 135,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 134
  },
  {
    "id": "ClientUtil#checkChannel",
    "longname": "ClientUtil#checkChannel",
    "name": "checkChannel",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Checks if a string could be referring to a channel.</p>",
    "memberof": "ClientUtil",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>Text to check</p>",
        "name": "text"
      },
      {
        "type": {
          "names": [
            "external:GuildChannel"
          ]
        },
        "description": "<p>Channel to check</p>",
        "name": "channel"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes checking by name case sensitive</p>",
        "name": "caseSensitive"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes checking by name match whole word only</p>",
        "name": "wholeWord"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 147,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 135
  },
  {
    "id": "ClientUtil#resolveRole",
    "longname": "ClientUtil#resolveRole",
    "name": "resolveRole",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Resolves a role from a string, such as an ID, a name, or a mention.</p>",
    "memberof": "ClientUtil",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>Text to resolve</p>",
        "name": "text"
      },
      {
        "type": {
          "names": [
            "Collection.<Snowflake, Role>"
          ]
        },
        "description": "<p>Collection of roles to find in</p>",
        "name": "roles"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes finding by name case sensitive</p>",
        "name": "caseSensitive"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes finding by name match whole word only</p>",
        "name": "wholeWord"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Role"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 171,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 136
  },
  {
    "id": "ClientUtil#resolveRoles",
    "longname": "ClientUtil#resolveRoles",
    "name": "resolveRoles",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Resolves multiple roles from a string, such as an ID, a name, or a mention.</p>",
    "memberof": "ClientUtil",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>Text to resolve</p>",
        "name": "text"
      },
      {
        "type": {
          "names": [
            "Collection.<Snowflake, Role>"
          ]
        },
        "description": "<p>Collection of roles to find in</p>",
        "name": "roles"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes finding by name case sensitive</p>",
        "name": "caseSensitive"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes finding by name match whole word only</p>",
        "name": "wholeWord"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Collection.<Snowflake, Role>"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 183,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 137
  },
  {
    "id": "ClientUtil#checkRole",
    "longname": "ClientUtil#checkRole",
    "name": "checkRole",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Checks if a string could be referring to a role.</p>",
    "memberof": "ClientUtil",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>Text to check</p>",
        "name": "text"
      },
      {
        "type": {
          "names": [
            "external:Role"
          ]
        },
        "description": "<p>Role to check</p>",
        "name": "role"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes checking by name case sensitive</p>",
        "name": "caseSensitive"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes checking by name match full word only</p>",
        "name": "wholeWord"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 195,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 138
  },
  {
    "id": "ClientUtil#resolveEmoji",
    "longname": "ClientUtil#resolveEmoji",
    "name": "resolveEmoji",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Resolves a custom emoji from a string, such as a name or a mention.</p>",
    "memberof": "ClientUtil",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>Text to resolve</p>",
        "name": "text"
      },
      {
        "type": {
          "names": [
            "Collection.<Snowflake, Emoji>"
          ]
        },
        "description": "<p>Collection of emojis to find in</p>",
        "name": "emojis"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes finding by name case sensitive</p>",
        "name": "caseSensitive"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes finding by name match whole word only</p>",
        "name": "wholeWord"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "external:Emoji"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 218,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 139
  },
  {
    "id": "ClientUtil#resolveEmojis",
    "longname": "ClientUtil#resolveEmojis",
    "name": "resolveEmojis",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Resolves multiple custom emojis from a string, such as a name or a mention.</p>",
    "memberof": "ClientUtil",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>Text to resolve</p>",
        "name": "text"
      },
      {
        "type": {
          "names": [
            "Collection.<Snowflake, Emoji>"
          ]
        },
        "description": "<p>Collection of emojis to find in</p>",
        "name": "emojis"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes finding by name case sensitive</p>",
        "name": "caseSensitive"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes finding by name match whole word only</p>",
        "name": "wholeWord"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Collection.<Snowflake, Emoji>"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 230,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 140
  },
  {
    "id": "ClientUtil#checkEmoji",
    "longname": "ClientUtil#checkEmoji",
    "name": "checkEmoji",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Checks if a string could be referring to an emoji.</p>",
    "memberof": "ClientUtil",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>Text to check</p>",
        "name": "text"
      },
      {
        "type": {
          "names": [
            "external:Emoji"
          ]
        },
        "description": "<p>Emoji to check</p>",
        "name": "emoji"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes checking by name case sensitive</p>",
        "name": "caseSensitive"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes checking by name match whole word only</p>",
        "name": "wholeWord"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 242,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 141
  },
  {
    "id": "ClientUtil#resolveGuild",
    "longname": "ClientUtil#resolveGuild",
    "name": "resolveGuild",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Resolves a guild from a string, such as an ID or name.</p>",
    "memberof": "ClientUtil",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>Text to resolve</p>",
        "name": "text"
      },
      {
        "type": {
          "names": [
            "Collection.<Snowflake, Guild>"
          ]
        },
        "description": "<p>Collection of guilds to find in</p>",
        "name": "guilds"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes finding by name case sensitive</p>",
        "name": "caseSensitive"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes finding by name full word only</p>",
        "name": "wholeWord"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "external:Guild"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 268,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 142
  },
  {
    "id": "ClientUtil#resolveGuilds",
    "longname": "ClientUtil#resolveGuilds",
    "name": "resolveGuilds",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Resolves multiple guilds from a string, such as an ID or name.</p>",
    "memberof": "ClientUtil",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>Text to resolve</p>",
        "name": "text"
      },
      {
        "type": {
          "names": [
            "Collection.<Snowflake, Guild>"
          ]
        },
        "description": "<p>Collection of guilds to find in</p>",
        "name": "guilds"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes finding by name case sensitive</p>",
        "name": "caseSensitive"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes finding by name full word only</p>",
        "name": "wholeWord"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Collection.<Snowflake, Guild>"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 280,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 143
  },
  {
    "id": "ClientUtil#checkGuild",
    "longname": "ClientUtil#checkGuild",
    "name": "checkGuild",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Checks if a string could be referring to a guild.</p>",
    "memberof": "ClientUtil",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>Text to check</p>",
        "name": "text"
      },
      {
        "type": {
          "names": [
            "external:Guild"
          ]
        },
        "description": "<p>Guild to check</p>",
        "name": "guild"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes checking by name case sensitive</p>",
        "name": "caseSensitive"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": false,
        "description": "<p>Makes checking by name match full word only</p>",
        "name": "wholeWord"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 292,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 144
  },
  {
    "id": "ClientUtil#permissionNames",
    "longname": "ClientUtil#permissionNames",
    "name": "permissionNames",
    "kind": "function",
    "scope": "instance",
    "description": "<p>An array of permission names.</p>",
    "memberof": "ClientUtil",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 311,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 145
  },
  {
    "id": "ClientUtil#resolvePermissionNumber",
    "longname": "ClientUtil#resolvePermissionNumber",
    "name": "resolvePermissionNumber",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Resolved a permission number and returns an array of permissions names.</p>",
    "memberof": "ClientUtil",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "<p>The permissions number</p>",
        "name": "num"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 319,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 146
  },
  {
    "id": "ClientUtil#compareStreaming",
    "longname": "ClientUtil#compareStreaming",
    "name": "compareStreaming",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Compares two member objects presences and checks if they stopped or started a stream or not.\nReturns <code>0</code>, <code>1</code>, or <code>2</code> for no change, stopped, or started.</p>",
    "memberof": "ClientUtil",
    "params": [
      {
        "type": {
          "names": [
            "external:GuildMember"
          ]
        },
        "description": "<p>The old guild member</p>",
        "name": "oldMember"
      },
      {
        "type": {
          "names": [
            "external:GuildMember"
          ]
        },
        "description": "<p>The new guild member</p>",
        "name": "newMember"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 334,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 147
  },
  {
    "id": "ClientUtil#fetchMember",
    "longname": "ClientUtil#fetchMember",
    "name": "fetchMember",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Combination of <code>&lt;Client&gt;.fetchUser()</code> and <code>&lt;Guild&gt;.fetchMember()</code>.</p>",
    "memberof": "ClientUtil",
    "params": [
      {
        "type": {
          "names": [
            "external:Guild"
          ]
        },
        "description": "<p>The guild to fetch in</p>",
        "name": "guild"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>ID of the user to fetch</p>",
        "name": "id"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "<p>Whether or not to add to the cache</p>",
        "name": "cache"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<external:GuildMember>"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 350,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "async": true,
    "order": 148
  },
  {
    "id": "ClientUtil#embed",
    "longname": "ClientUtil#embed",
    "name": "embed",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Makes a MessageEmbed.</p>",
    "memberof": "ClientUtil",
    "params": [
      {
        "type": {
          "names": [
            "external:MessageEmbed",
            "external:MessageEmbedOptions"
          ]
        },
        "optional": true,
        "description": "<p>The data to use for the embed</p>",
        "name": "data"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "external:MessageEmbed"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 362,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 149
  },
  {
    "id": "ClientUtil#attachment",
    "longname": "ClientUtil#attachment",
    "name": "attachment",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Makes a MessageAttachment.</p>",
    "memberof": "ClientUtil",
    "params": [
      {
        "type": {
          "names": [
            "external:BufferResolvable",
            "Stream"
          ]
        },
        "description": "<p>The file</p>",
        "name": "file"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "<p>The name of the file</p>",
        "name": "name"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "external:MessageAttachment"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 371,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 150
  },
  {
    "id": "ClientUtil#collection",
    "longname": "ClientUtil#collection",
    "name": "collection",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Makes a Collection.</p>",
    "memberof": "ClientUtil",
    "params": [
      {
        "type": {
          "names": [
            "Iterable"
          ]
        },
        "optional": true,
        "description": "<p>Entries to fill with</p>",
        "name": "iterable"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "external:Collection"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 381,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 151
  },
  {
    "id": "ClientUtil#list",
    "longname": "ClientUtil#list",
    "name": "list",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Makes a List.</p>",
    "memberof": "ClientUtil",
    "params": [
      {
        "type": {
          "names": [
            "Iterable"
          ]
        },
        "optional": true,
        "description": "<p>Entries to fill with</p>",
        "name": "iterable"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "List"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 390,
      "filename": "ClientUtil.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 152
  },
  {
    "id": "Cron#next",
    "longname": "Cron#next",
    "name": "next",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Gets the next instance that this will trigger.</p>",
    "memberof": "Cron",
    "params": [
      {
        "type": {
          "names": [
            "Date"
          ]
        },
        "optional": true,
        "defaultvalue": "new Date()",
        "description": "<p>The previous date</p>",
        "name": "outset"
      },
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "optional": true,
        "defaultvalue": true,
        "description": "<p>Whether this is the original call</p>",
        "name": "origin"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Date"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 41,
      "filename": "Cron.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 169
  },
  {
    "id": "List#array",
    "longname": "List#array",
    "name": "array",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Creates an ordered array of the values of this list, and caches it internally. The array will only be\nreconstructed if an item is added to or removed from the list, or if you change the length of the array\nitself. If you don't want this caching behavoir, use <code>[...list.values()]</code> or\n<code>Array.from(list.values())</code> instead.</p>",
    "memberof": "List",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "Array"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 33,
      "filename": "List.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 177
  },
  {
    "id": "List#first",
    "longname": "List#first",
    "name": "first",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Obtains the first value(s) in this list.</p>",
    "memberof": "List",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "<p>Amount of values to obtain from the beginning</p>",
        "name": "amount"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "*",
            "Array.<*>"
          ]
        },
        "description": "<p>A single value if no amount is provided or an array of values, starting from the end if\namount is negative</p>"
      }
    ],
    "meta": {
      "lineno": 45,
      "filename": "List.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 178
  },
  {
    "id": "List#last",
    "longname": "List#last",
    "name": "last",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Obtains the last value(s) in this list. This relies on {@link List#array}, and thus the caching\nmechanism applies here as well.</p>",
    "memberof": "List",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "<p>Amount of values to obtain from the end</p>",
        "name": "amount"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "*",
            "Array.<*>"
          ]
        },
        "description": "<p>A single value if no amount is provided or an array of values, starting from the start if\namount is negative</p>"
      }
    ],
    "meta": {
      "lineno": 63,
      "filename": "List.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 179
  },
  {
    "id": "List#random",
    "longname": "List#random",
    "name": "random",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Obtains unique random value(s) from this list. This relies on {@link List#array}, and thus the caching\nmechanism applies here as well.</p>",
    "memberof": "List",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "optional": true,
        "description": "<p>Amount of values to obtain randomly</p>",
        "name": "amount"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "*",
            "Array.<*>"
          ]
        },
        "description": "<p>A single value if no amount is provided or an array of values</p>"
      }
    ],
    "meta": {
      "lineno": 82,
      "filename": "List.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 180
  },
  {
    "id": "List#find",
    "longname": "List#find",
    "name": "find",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Searches for a single item where the given function returns a truthy value. This behaves like\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\">Array.find()</a>.</p>",
    "memberof": "List",
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "<p>The function to test with (should return boolean)</p>",
        "name": "fn"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "optional": true,
        "description": "<p>Value to use as <code>this</code> when executing function</p>",
        "name": "thisArg"
      }
    ],
    "examples": [
      "list.find(user => user.username === 'Bob');"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "*"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 100,
      "filename": "List.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 181
  },
  {
    "id": "List#sweep",
    "longname": "List#sweep",
    "name": "sweep",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Removes entries that satisfy the provided filter function.</p>",
    "memberof": "List",
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "<p>Function used to test (should return a boolean)</p>",
        "name": "fn"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "optional": true,
        "description": "<p>Value used as <code>this</code> when executing function</p>",
        "name": "thisArg"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "<p>The number of removed entries</p>"
      }
    ],
    "meta": {
      "lineno": 116,
      "filename": "List.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 182
  },
  {
    "id": "List#filter",
    "longname": "List#filter",
    "name": "filter",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Identical to\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\">Array.filter()</a>,\nbut returns a {@link List} instead of an Array.</p>",
    "memberof": "List",
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "<p>The function used to test with (should return boolean)</p>",
        "name": "fn"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "optional": true,
        "description": "<p>Value to use as <code>this</code> when executing function</p>",
        "name": "thisArg"
      }
    ],
    "examples": [
      "list.filter(user => user.username === 'Bob');"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "List"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 131,
      "filename": "List.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 183
  },
  {
    "id": "List#partition",
    "longname": "List#partition",
    "name": "partition",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Partitions the list into two lists where the first list\ncontains the items that passed and the second contains the items that failed.</p>",
    "memberof": "List",
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "<p>Function used to test (should return a boolean)</p>",
        "name": "fn"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "optional": true,
        "description": "<p>Value to use as <code>this</code> when executing function</p>",
        "name": "thisArg"
      }
    ],
    "examples": [
      "const [big, small] = list.partition(guild => guild.memberCount > 250);"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<List>"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 150,
      "filename": "List.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 184
  },
  {
    "id": "List#map",
    "longname": "List#map",
    "name": "map",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Maps each item to another value into an array. Identical in behavior to\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\">Array.map()</a>.</p>",
    "memberof": "List",
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "<p>Function that produces an element of the new array, taking three arguments</p>",
        "name": "fn"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "optional": true,
        "description": "<p>Value to use as <code>this</code> when executing function</p>",
        "name": "thisArg"
      }
    ],
    "examples": [
      "list.map(user => user.tag);"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 172,
      "filename": "List.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 185
  },
  {
    "id": "List#mapValues",
    "longname": "List#mapValues",
    "name": "mapValues",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Maps each item to another into a list. Identical in behavior to\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\">Array.map()</a>.</p>",
    "memberof": "List",
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "<p>Function that produces an element of the new list, taking three arguments</p>",
        "name": "fn"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "optional": true,
        "description": "<p>Value to use as <code>this</code> when executing function</p>",
        "name": "thisArg"
      }
    ],
    "examples": [
      "list.mapValues(user => user.tag);"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "List"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 189,
      "filename": "List.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 186
  },
  {
    "id": "List#some",
    "longname": "List#some",
    "name": "some",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Checks if there exists an item that passes a test. Identical in behavior to\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some\">Array.some()</a>.</p>",
    "memberof": "List",
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "<p>Function used to test (should return a boolean)</p>",
        "name": "fn"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "optional": true,
        "description": "<p>Value to use as <code>this</code> when executing function</p>",
        "name": "thisArg"
      }
    ],
    "examples": [
      "list.some(user => user.discriminator === '0000');"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 205,
      "filename": "List.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 187
  },
  {
    "id": "List#every",
    "longname": "List#every",
    "name": "every",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Checks if all items pass a test. Identical in behavior to\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every\">Array.every()</a>.</p>",
    "memberof": "List",
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "<p>Function used to test (should return a boolean)</p>",
        "name": "fn"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "optional": true,
        "description": "<p>Value to use as <code>this</code> when executing function</p>",
        "name": "thisArg"
      }
    ],
    "examples": [
      "list.every(user => !user.bot);"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 221,
      "filename": "List.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 188
  },
  {
    "id": "List#reduce",
    "longname": "List#reduce",
    "name": "reduce",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Applies a function to produce a single value. Identical in behavior to\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\">Array.reduce()</a>.</p>",
    "memberof": "List",
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "<p>Function used to reduce, taking four arguments; <code>accumulator</code>, <code>currentValue</code>, <code>currentValue</code>,\nand <code>list</code></p>",
        "name": "fn"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "optional": true,
        "description": "<p>Starting value for the accumulator</p>",
        "name": "initialValue"
      }
    ],
    "examples": [
      "list.reduce((acc, guild) => acc + guild.memberCount, 0);"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "*"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 237,
      "filename": "List.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 189
  },
  {
    "id": "List#each",
    "longname": "List#each",
    "name": "each",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Identical to\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set/forEach\">Set.forEach()</a>,\nbut returns the list instead of undefined.</p>",
    "memberof": "List",
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "<p>Function to execute for each element</p>",
        "name": "fn"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "optional": true,
        "description": "<p>Value to use as <code>this</code> when executing function</p>",
        "name": "thisArg"
      }
    ],
    "examples": [
      "list\r .each(user => console.log(user.username))\r .filter(user => user.bot)\r .each(user => console.log(user.username));"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "List"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 269,
      "filename": "List.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 190
  },
  {
    "id": "List#tap",
    "longname": "List#tap",
    "name": "tap",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Runs a function on the list and returns the list.</p>",
    "memberof": "List",
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "<p>Function to execute</p>",
        "name": "fn"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "optional": true,
        "description": "<p>Value to use as <code>this</code> when executing function</p>",
        "name": "thisArg"
      }
    ],
    "examples": [
      "list\r .tap(list => console.log(list.size))\r .filter(user => user.bot)\r .tap(list => console.log(list.size));"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "List"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 287,
      "filename": "List.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 191
  },
  {
    "id": "List#clone",
    "longname": "List#clone",
    "name": "clone",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Creates an identical shallow copy of this list.</p>",
    "memberof": "List",
    "params": [],
    "examples": [
      "const newList = someList.clone();"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "List"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 304,
      "filename": "List.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 192
  },
  {
    "id": "List#concat",
    "longname": "List#concat",
    "name": "concat",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Combines this list with others into a new list. None of the source lists are modified.</p>",
    "memberof": "List",
    "params": [
      {
        "type": {
          "names": [
            "List"
          ]
        },
        "variable": true,
        "description": "<p>Lists to merge</p>",
        "name": "lists"
      }
    ],
    "examples": [
      "const newList = someList.concat(someOtherList, anotherList, ohBoyAList);"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "List"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 314,
      "filename": "List.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 193
  },
  {
    "id": "List#equals",
    "longname": "List#equals",
    "name": "equals",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Checks if this list shares identical value-value parings with another.\nThis is different to checking for equality using equal-signs, because\nthe collections may be different objects, but contain the same data.</p>",
    "memberof": "List",
    "params": [
      {
        "type": {
          "names": [
            "List"
          ]
        },
        "description": "<p>List to compare with</p>",
        "name": "list"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        },
        "description": "<p>Whether the collections have identical contents</p>"
      }
    ],
    "meta": {
      "lineno": 328,
      "filename": "List.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 194
  },
  {
    "id": "List#sort",
    "longname": "List#sort",
    "name": "sort",
    "kind": "function",
    "scope": "instance",
    "description": "<p>The sort() method sorts the elements of a list and returns it.\nThe sort is not necessarily stable. The default sort order is according to string Unicode points.</p>",
    "memberof": "List",
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "<p>Specifies a function that defines the sort order.\nIf omitted, the list is sorted according to each character's Unicode point value,\naccording to the string conversion of each element.</p>",
        "name": "compareFunction"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "List"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 345,
      "filename": "List.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 195
  },
  {
    "id": "Type#toString",
    "longname": "Type#toString",
    "name": "toString",
    "kind": "function",
    "scope": "instance",
    "description": "<p>The full string type generated.</p>",
    "memberof": "Type",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 70,
      "filename": "Type.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 204
  },
  {
    "id": "Type#parents",
    "longname": "Type#parents",
    "name": "parents",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Walks the linked list backwards. for checking circulars.</p>",
    "memberof": "Type",
    "params": [],
    "access": "private",
    "meta": {
      "lineno": 79,
      "filename": "Type.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "yields": [
      {
        "type": {
          "names": [
            "Type"
          ]
        },
        "nullable": true
      }
    ],
    "generator": true,
    "order": 205
  },
  {
    "id": "Type#addValue",
    "longname": "Type#addValue",
    "name": "addValue",
    "kind": "function",
    "scope": "instance",
    "description": "<p>The subtype to create based on this.value's sub value.</p>",
    "memberof": "Type",
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "<p>The sub value</p>",
        "name": "value"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ],
    "access": "private",
    "meta": {
      "lineno": 90,
      "filename": "Type.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 206
  },
  {
    "id": "Type#addEntry",
    "longname": "Type#addEntry",
    "name": "addEntry",
    "kind": "function",
    "scope": "instance",
    "description": "<p>The subtype to create based on this.value's entries.</p>",
    "memberof": "Type",
    "params": [
      {
        "type": {
          "names": [
            "Array.<string, *>"
          ]
        },
        "description": "<p>The entry</p>",
        "name": "entry"
      }
    ],
    "access": "private",
    "meta": {
      "lineno": 101,
      "filename": "Type.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 207
  },
  {
    "id": "Type#check",
    "longname": "Type#check",
    "name": "check",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Get the deep type name that defines the input.</p>",
    "memberof": "Type",
    "params": [],
    "access": "private",
    "meta": {
      "lineno": 112,
      "filename": "Type.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 208
  },
  {
    "id": "Type#isCircular",
    "longname": "Type#isCircular",
    "name": "isCircular",
    "kind": "function",
    "scope": "instance",
    "description": "<p>Checks if the value of this Type is a circular reference to any parent.</p>",
    "memberof": "Type",
    "params": [],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "access": "private",
    "meta": {
      "lineno": 127,
      "filename": "Type.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 209
  },
  {
    "id": "CommandRegistry#registerCoreDirectory",
    "longname": "CommandRegistry#registerCoreDirectory",
    "name": "registerCoreDirectory",
    "kind": "function",
    "scope": "instance",
    "inherits": "BaseRegistry#registerCoreDirectory",
    "inherited": true,
    "overrides": "BaseRegistry#registerCoreDirectory",
    "description": "<p>Registers a core directory.</p>",
    "memberof": "CommandRegistry",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>The directory to register</p>",
        "name": "directory"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "this"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 67,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 229
  },
  {
    "id": "CommandRegistry#loadAll",
    "longname": "CommandRegistry#loadAll",
    "name": "loadAll",
    "kind": "function",
    "scope": "instance",
    "inherits": "BaseRegistry#loadAll",
    "inherited": true,
    "overrides": "BaseRegistry#loadAll",
    "description": "<p>Loads all the bases found in the core directories.</p>",
    "memberof": "CommandRegistry",
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<number>"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 85,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "async": true,
    "order": 231
  },
  {
    "id": "CommandRegistry#load",
    "longname": "CommandRegistry#load",
    "name": "load",
    "kind": "function",
    "scope": "instance",
    "inherits": "BaseRegistry#load",
    "inherited": true,
    "overrides": "BaseRegistry#load",
    "description": "<p>Loads a base into the registry.</p>",
    "memberof": "CommandRegistry",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>The directory of the base</p>",
        "name": "directory"
      },
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        },
        "description": "<p>The file location of the base</p>",
        "name": "file"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Base"
          ]
        },
        "nullable": true
      }
    ],
    "meta": {
      "lineno": 96,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 232
  },
  {
    "id": "EventRegistry#registerCoreDirectory",
    "longname": "EventRegistry#registerCoreDirectory",
    "name": "registerCoreDirectory",
    "kind": "function",
    "scope": "instance",
    "inherits": "BaseRegistry#registerCoreDirectory",
    "inherited": true,
    "overrides": "BaseRegistry#registerCoreDirectory",
    "description": "<p>Registers a core directory.</p>",
    "memberof": "EventRegistry",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>The directory to register</p>",
        "name": "directory"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "this"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 67,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 236
  },
  {
    "id": "EventRegistry#loadAll",
    "longname": "EventRegistry#loadAll",
    "name": "loadAll",
    "kind": "function",
    "scope": "instance",
    "inherits": "BaseRegistry#loadAll",
    "inherited": true,
    "overrides": "BaseRegistry#loadAll",
    "description": "<p>Loads all the bases found in the core directories.</p>",
    "memberof": "EventRegistry",
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<number>"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 85,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "async": true,
    "order": 238
  },
  {
    "id": "TaskRegistry#registerCoreDirectory",
    "longname": "TaskRegistry#registerCoreDirectory",
    "name": "registerCoreDirectory",
    "kind": "function",
    "scope": "instance",
    "inherits": "BaseRegistry#registerCoreDirectory",
    "inherited": true,
    "overrides": "BaseRegistry#registerCoreDirectory",
    "description": "<p>Registers a core directory.</p>",
    "memberof": "TaskRegistry",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>The directory to register</p>",
        "name": "directory"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "this"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 67,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 242
  },
  {
    "id": "TaskRegistry#loadAll",
    "longname": "TaskRegistry#loadAll",
    "name": "loadAll",
    "kind": "function",
    "scope": "instance",
    "inherits": "BaseRegistry#loadAll",
    "inherited": true,
    "overrides": "BaseRegistry#loadAll",
    "description": "<p>Loads all the bases found in the core directories.</p>",
    "memberof": "TaskRegistry",
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<number>"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 85,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "async": true,
    "order": 244
  },
  {
    "id": "TaskRegistry#load",
    "longname": "TaskRegistry#load",
    "name": "load",
    "kind": "function",
    "scope": "instance",
    "inherits": "BaseRegistry#load",
    "inherited": true,
    "overrides": "BaseRegistry#load",
    "description": "<p>Loads a base into the registry.</p>",
    "memberof": "TaskRegistry",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>The directory of the base</p>",
        "name": "directory"
      },
      {
        "type": {
          "names": [
            "Array.<string>"
          ]
        },
        "description": "<p>The file location of the base</p>",
        "name": "file"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Base"
          ]
        },
        "nullable": true
      }
    ],
    "meta": {
      "lineno": 96,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 245
  },
  {
    "id": "TaskRegistry#add",
    "longname": "TaskRegistry#add",
    "name": "add",
    "kind": "function",
    "scope": "instance",
    "inherits": "BaseRegistry#add",
    "inherited": true,
    "overrides": "BaseRegistry#add",
    "description": "<p>Adds a base to the registry.</p>",
    "memberof": "TaskRegistry",
    "params": [
      {
        "type": {
          "names": [
            "Base"
          ]
        },
        "description": "<p>The base to be added</p>",
        "name": "base"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Base"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 118,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 246
  },
  {
    "id": "Command#enable",
    "longname": "Command#enable",
    "name": "enable",
    "kind": "function",
    "scope": "instance",
    "inherits": "Base#enable",
    "inherited": true,
    "overrides": "Base#enable",
    "description": "<p>Enables the base. Shortcut for <code>&lt;base&gt;.enabled = true</code>.</p>",
    "memberof": "Command",
    "fires": [
      "InlustrisClient#event:baseEnabled"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Base"
          ]
        }
      }
    ],
    "chainable": true,
    "meta": {
      "lineno": 69,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 252
  },
  {
    "id": "Command#disable",
    "longname": "Command#disable",
    "name": "disable",
    "kind": "function",
    "scope": "instance",
    "inherits": "Base#disable",
    "inherited": true,
    "overrides": "Base#disable",
    "description": "<p>Disables the base. Shortcut for <code>&lt;base&gt;.enabled = false</code>.</p>",
    "memberof": "Command",
    "fires": [
      "InlustrisClient#event:baseDisabled"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Base"
          ]
        }
      }
    ],
    "chainable": true,
    "meta": {
      "lineno": 80,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 253
  },
  {
    "id": "Command#unload",
    "longname": "Command#unload",
    "name": "unload",
    "kind": "function",
    "scope": "instance",
    "inherits": "Base#unload",
    "inherited": true,
    "overrides": "Base#unload",
    "description": "<p>Unloads the base, and deletes it from the registry.</p>",
    "memberof": "Command",
    "fires": [
      "InlustrisClient#event:baseUnloaded"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 91,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 254
  },
  {
    "id": "Event#unload",
    "longname": "Event#unload",
    "name": "unload",
    "kind": "function",
    "scope": "instance",
    "inherits": "Base#unload",
    "inherited": true,
    "overrides": "Base#unload",
    "description": "<p>Unloads the base, and deletes it from the registry.</p>",
    "memberof": "Event",
    "fires": [
      "InlustrisClient#event:baseUnloaded"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 91,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 260
  },
  {
    "id": "Task#enable",
    "longname": "Task#enable",
    "name": "enable",
    "kind": "function",
    "scope": "instance",
    "inherits": "Base#enable",
    "inherited": true,
    "description": "<p>Enables the base. Shortcut for <code>&lt;base&gt;.enabled = true</code>.</p>",
    "memberof": "Task",
    "fires": [
      "InlustrisClient#event:baseEnabled"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Base"
          ]
        }
      }
    ],
    "chainable": true,
    "meta": {
      "lineno": 69,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 266
  },
  {
    "id": "Task#disable",
    "longname": "Task#disable",
    "name": "disable",
    "kind": "function",
    "scope": "instance",
    "inherits": "Base#disable",
    "inherited": true,
    "description": "<p>Disables the base. Shortcut for <code>&lt;base&gt;.enabled = false</code>.</p>",
    "memberof": "Task",
    "fires": [
      "InlustrisClient#event:baseDisabled"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Base"
          ]
        }
      }
    ],
    "chainable": true,
    "meta": {
      "lineno": 80,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 267
  },
  {
    "id": "Task#unload",
    "longname": "Task#unload",
    "name": "unload",
    "kind": "function",
    "scope": "instance",
    "inherits": "Base#unload",
    "inherited": true,
    "description": "<p>Unloads the base, and deletes it from the registry.</p>",
    "memberof": "Task",
    "fires": [
      "InlustrisClient#event:baseUnloaded"
    ],
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 91,
      "filename": "Base.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\structures"
    },
    "order": 268
  },
  {
    "id": "InlustrisClient#event:baseEnabled",
    "longname": "InlustrisClient#event:baseEnabled",
    "name": "baseEnabled",
    "kind": "event",
    "scope": "instance",
    "description": "<p>Emitted when a base is enabled.</p>",
    "memberof": "InlustrisClient",
    "params": [
      {
        "type": {
          "names": [
            "Base"
          ]
        },
        "description": "<p>The base that was enabled</p>",
        "name": "base"
      }
    ],
    "meta": {
      "lineno": 396,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 37
  },
  {
    "id": "InlustrisClient#event:baseDisabled",
    "longname": "InlustrisClient#event:baseDisabled",
    "name": "baseDisabled",
    "kind": "event",
    "scope": "instance",
    "description": "<p>Emitted when a base is disabled.</p>",
    "memberof": "InlustrisClient",
    "params": [
      {
        "type": {
          "names": [
            "Base"
          ]
        },
        "description": "<p>The base that was disabled</p>",
        "name": "base"
      }
    ],
    "meta": {
      "lineno": 402,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 38
  },
  {
    "id": "InlustrisClient#event:clientReady",
    "longname": "InlustrisClient#event:clientReady",
    "name": "clientReady",
    "kind": "event",
    "scope": "instance",
    "description": "<p>Emitted when the client is ready. Should be listened to over <code>Client#ready</code>\nas Inlustris uses that internallly to initialize the client once Discord data\nis ready.</p>",
    "memberof": "InlustrisClient",
    "meta": {
      "lineno": 408,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 39
  },
  {
    "id": "InlustrisClient#event:baseUnloaded",
    "longname": "InlustrisClient#event:baseUnloaded",
    "name": "baseUnloaded",
    "kind": "event",
    "scope": "instance",
    "description": "<p>Emitted when a base is unloaded.</p>",
    "memberof": "InlustrisClient",
    "params": [
      {
        "type": {
          "names": [
            "Base"
          ]
        },
        "description": "<p>The base that was disabled</p>",
        "name": "base"
      }
    ],
    "meta": {
      "lineno": 415,
      "filename": "Client.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib"
    },
    "order": 40
  },
  {
    "id": "@@species",
    "longname": "@@species",
    "name": "@@species",
    "kind": "member",
    "scope": "static",
    "description": "<p>The method used for creating copies.</p>",
    "type": {
      "names": [
        "Collection"
      ]
    },
    "meta": {
      "lineno": 147,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "order": 55
  },
  {
    "id": "BaseRegistry.walk",
    "longname": "BaseRegistry.walk",
    "name": "walk",
    "kind": "function",
    "scope": "static",
    "description": "<p>Walks through a directory and loads all the bases into the provided registry</p>",
    "memberof": "BaseRegistry",
    "params": [
      {
        "type": {
          "names": [
            "BaseRegistry"
          ]
        },
        "description": "<p>The registry to load files in</p>",
        "name": "registry"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "defaultvalue": "registry.userDirectory",
        "description": "<p>The directory to load files from</p>",
        "name": "directory"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Promise.<Array.<Base>>"
          ]
        }
      }
    ],
    "access": "private",
    "meta": {
      "lineno": 133,
      "filename": "BaseRegistry.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\registries"
    },
    "async": true,
    "order": 54
  },
  {
    "id": "ScheduledTask._resolveTime",
    "longname": "ScheduledTask._resolveTime",
    "name": "_resolveTime",
    "kind": "function",
    "scope": "static",
    "description": "<p>Resolves a TimeResolvable into a time.</p>",
    "memberof": "ScheduledTask",
    "params": [
      {
        "type": {
          "names": [
            "TimeResolvable"
          ]
        },
        "description": "<p>The time to resolve</p>",
        "name": "time"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<any>"
          ]
        }
      }
    ],
    "access": "private",
    "meta": {
      "lineno": 146,
      "filename": "ScheduledTask.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "order": 98
  },
  {
    "id": "ScheduledTask._generateID",
    "longname": "ScheduledTask._generateID",
    "name": "_generateID",
    "kind": "function",
    "scope": "static",
    "description": "<p>Generates a unique ID for the task.</p>",
    "memberof": "ScheduledTask",
    "params": [
      {
        "type": {
          "names": [
            "InlustrisClient"
          ]
        },
        "description": "<p>The client</p>",
        "name": "client"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "access": "private",
    "meta": {
      "lineno": 163,
      "filename": "ScheduledTask.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "order": 99
  },
  {
    "id": "ScheduledTask._validate",
    "longname": "ScheduledTask._validate",
    "name": "_validate",
    "kind": "function",
    "scope": "static",
    "description": "<p>Validates a task, called on creation.</p>",
    "memberof": "ScheduledTask",
    "params": [
      {
        "type": {
          "names": [
            "ScheduledTask"
          ]
        },
        "description": "<p>The task to validate</p>",
        "name": "st"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "void"
          ]
        }
      }
    ],
    "access": "private",
    "meta": {
      "lineno": 174,
      "filename": "ScheduledTask.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\schedule"
    },
    "order": 100
  },
  {
    "id": "Cron._normalize",
    "longname": "Cron._normalize",
    "name": "_normalize",
    "kind": "function",
    "scope": "static",
    "description": "<p>Normalizes a string into a cron-parsed string.</p>",
    "memberof": "Cron",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>The cron to parse</p>",
        "name": "cron"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "access": "private",
    "meta": {
      "lineno": 66,
      "filename": "Cron.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 170
  },
  {
    "id": "Cron._parseString",
    "longname": "Cron._parseString",
    "name": "_parseString",
    "kind": "function",
    "scope": "static",
    "description": "<p>Parses a string into numbers.</p>",
    "memberof": "Cron",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>The cron string to parse</p>",
        "name": "cron"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<Array.<number>>"
          ]
        }
      }
    ],
    "access": "private",
    "meta": {
      "lineno": 92,
      "filename": "Cron.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 171
  },
  {
    "id": "Cron._parsePart",
    "longname": "Cron._parsePart",
    "name": "_parsePart",
    "kind": "function",
    "scope": "static",
    "description": "<p>Parses a part into a cron number</p>",
    "memberof": "Cron",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>The cron part to parse</p>",
        "name": "cronPart"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "<p>The place of the part</p>",
        "name": "id"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        }
      }
    ],
    "access": "private",
    "meta": {
      "lineno": 104,
      "filename": "Cron.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 172
  },
  {
    "id": "Cron._range",
    "longname": "Cron._range",
    "name": "_range",
    "kind": "function",
    "scope": "static",
    "description": "<p>Creates a range for cron</p>",
    "memberof": "Cron",
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "<p>The minimum</p>",
        "name": "min"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "<p>The maximum</p>",
        "name": "max"
      },
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "<p>How much the range steps by</p>",
        "name": "step"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        }
      }
    ],
    "access": "private",
    "meta": {
      "lineno": 127,
      "filename": "Cron.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 173
  },
  {
    "id": "Type.resolve",
    "longname": "Type.resolve",
    "name": "resolve",
    "kind": "function",
    "scope": "static",
    "description": "<p>Resolves the type name that defines the input.</p>",
    "memberof": "Type",
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "<p>The value to get the type name from</p>",
        "name": "value"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 137,
      "filename": "Type.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 210
  },
  {
    "id": "Type.list",
    "longname": "Type.list",
    "name": "list",
    "kind": "function",
    "scope": "static",
    "description": "<p>Joins the list of child types.</p>",
    "memberof": "Type",
    "params": [
      {
        "type": {
          "names": [
            "Map.<string, Type>"
          ]
        },
        "description": "<p>The values to list</p>",
        "name": "values"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "access": "private",
    "meta": {
      "lineno": 152,
      "filename": "Type.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 211
  },
  {
    "id": "Util.isObject",
    "longname": "Util.isObject",
    "name": "isObject",
    "kind": "function",
    "scope": "static",
    "description": "<p>Checks if a value is an <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object\">Object</a>.</p>",
    "memberof": "Util",
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "<p>Input to check</p>",
        "name": "inp"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 49,
      "filename": "Util.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 214
  },
  {
    "id": "Util.isPrimitive",
    "longname": "Util.isPrimitive",
    "name": "isPrimitive",
    "kind": "function",
    "scope": "static",
    "description": "<p>Checks if a value is a <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Primitive\">primitive</a> type.</p>",
    "memberof": "Util",
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "<p>Input to check</p>",
        "name": "inp"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 58,
      "filename": "Util.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 215
  },
  {
    "id": "Util.toTitleCase",
    "longname": "Util.toTitleCase",
    "name": "toTitleCase",
    "kind": "function",
    "scope": "static",
    "description": "<p>Converts a string to Title Case.</p>",
    "memberof": "Util",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>The string to convert to title case</p>",
        "name": "str"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 67,
      "filename": "Util.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 216
  },
  {
    "id": "Util.mergeObjects",
    "longname": "Util.mergeObjects",
    "name": "mergeObjects",
    "kind": "function",
    "scope": "static",
    "description": "<p>Merges two objects.</p>",
    "memberof": "Util",
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "<p>The object to be merged</p>",
        "name": "objTarget"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "<p>The object to merge</p>",
        "name": "objSource"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "*"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 76,
      "filename": "Util.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 217
  },
  {
    "id": "Util.makeObject",
    "longname": "Util.makeObject",
    "name": "makeObject",
    "kind": "function",
    "scope": "static",
    "description": "<p>Turns a dotted path into a json object.</p>",
    "memberof": "Util",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "<p>The dotted path</p>",
        "name": "path"
      },
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "<p>The value</p>",
        "name": "value"
      },
      {
        "type": {
          "names": [
            "Object.<string, *>"
          ]
        },
        "optional": true,
        "defaultvalue": "{}",
        "description": "<p>The object to edit</p>",
        "name": "obj"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "*"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 89,
      "filename": "Util.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 218
  },
  {
    "id": "Util.deepClone",
    "longname": "Util.deepClone",
    "name": "deepClone",
    "kind": "function",
    "scope": "static",
    "description": "<p>Deeply clones a value.</p>",
    "memberof": "Util",
    "params": [
      {
        "type": {
          "names": [
            "*"
          ]
        },
        "description": "<p>Value to clone</p>",
        "name": "source"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "*"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 112,
      "filename": "Util.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 219
  },
  {
    "id": "Util.mergeDefault",
    "longname": "Util.mergeDefault",
    "name": "mergeDefault",
    "kind": "function",
    "scope": "static",
    "description": "<p>Merges a given object with a set of defaults.</p>",
    "memberof": "Util",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "<p>Defaults to add</p>",
        "name": "def"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "<p>Given object to add to</p>",
        "name": "given"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 142,
      "filename": "Util.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 220
  },
  {
    "id": "Util.isClass",
    "longname": "Util.isClass",
    "name": "isClass",
    "kind": "function",
    "scope": "static",
    "description": "<p>Checks if a given input is a class.</p>",
    "memberof": "Util",
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "<p>The input to check</p>",
        "name": "inp"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 158,
      "filename": "Util.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 221
  },
  {
    "id": "Util.isThenable",
    "longname": "Util.isThenable",
    "name": "isThenable",
    "kind": "function",
    "scope": "static",
    "description": "<p>Checks if a given input is a Promise.</p>",
    "memberof": "Util",
    "params": [
      {
        "type": {
          "names": [
            "Promise"
          ]
        },
        "description": "<p>The input to check</p>",
        "name": "input"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 169,
      "filename": "Util.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 222
  },
  {
    "id": "Util.isFunction",
    "longname": "Util.isFunction",
    "name": "isFunction",
    "kind": "function",
    "scope": "static",
    "description": "<p>Checks if the given input is a Function.</p>",
    "memberof": "Util",
    "params": [
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "description": "<p>The input to check</p>",
        "name": "input"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 180,
      "filename": "Util.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 223
  },
  {
    "id": "Util.objectToTuples",
    "longname": "Util.objectToTuples",
    "name": "objectToTuples",
    "kind": "function",
    "scope": "static",
    "description": "<p>Convert an object to a tuple.</p>",
    "memberof": "Util",
    "params": [
      {
        "type": {
          "names": [
            "Object.<string, *>"
          ]
        },
        "description": "<p>The object to convert</p>",
        "name": "obj"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "defaultvalue": "''",
        "description": "<p>The prefix for the key</p>",
        "name": "prefix"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<Array.<*>>"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 189,
      "filename": "Util.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 224
  },
  {
    "id": "Util.arrayStrictEquals",
    "longname": "Util.arrayStrictEquals",
    "name": "arrayStrictEquals",
    "kind": "function",
    "scope": "static",
    "description": "<p>Compares if both arrays are strictly equal.</p>",
    "memberof": "Util",
    "params": [
      {
        "type": {
          "names": [
            "Array.<any>"
          ]
        },
        "description": "<p>The first array to compare</p>",
        "name": "arr1"
      },
      {
        "type": {
          "names": [
            "Array.<any>"
          ]
        },
        "description": "<p>The second array to compare</p>",
        "name": "arr2"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "meta": {
      "lineno": 208,
      "filename": "Util.ts",
      "path": "C:\\Users\\Owen\\Desktop\\Repos\\Inlustris\\src\\lib\\util"
    },
    "order": 225
  }
]
